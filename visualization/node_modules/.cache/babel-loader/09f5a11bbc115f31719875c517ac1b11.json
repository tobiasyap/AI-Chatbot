{"ast":null,"code":"/**\n * Rounds all elements of the given matrix using the given precision\n * @param matrix {Matrix} An affine matrix to round\n * @param [precision] {number} A precision to use for Math.round. Defaults to 10000000000 (meaning which rounds to the 10th digit after the comma).\n * @returns {Matrix} The rounded Affine Matrix\n */\nexport function smoothMatrix(matrix) {\n  let precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10000000000;\n  return {\n    a: Math.round(matrix.a * precision) / precision,\n    b: Math.round(matrix.b * precision) / precision,\n    c: Math.round(matrix.c * precision) / precision,\n    d: Math.round(matrix.d * precision) / precision,\n    e: Math.round(matrix.e * precision) / precision,\n    f: Math.round(matrix.f * precision) / precision\n  };\n}","map":{"version":3,"sources":["/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/node_modules/transformation-matrix/src/smoothMatrix.js"],"names":["smoothMatrix","matrix","precision","a","Math","round","b","c","d","e","f"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,YAAT,CAAuBC,MAAvB,EAAwD;AAAA,MAAzBC,SAAyB,uEAAb,WAAa;AAC7D,SAAO;AACLC,IAAAA,CAAC,EAAEC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACE,CAAP,GAAWD,SAAtB,IAAmCA,SADjC;AAELI,IAAAA,CAAC,EAAEF,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACK,CAAP,GAAWJ,SAAtB,IAAmCA,SAFjC;AAGLK,IAAAA,CAAC,EAAEH,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACM,CAAP,GAAWL,SAAtB,IAAmCA,SAHjC;AAILM,IAAAA,CAAC,EAAEJ,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACO,CAAP,GAAWN,SAAtB,IAAmCA,SAJjC;AAKLO,IAAAA,CAAC,EAAEL,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACQ,CAAP,GAAWP,SAAtB,IAAmCA,SALjC;AAMLQ,IAAAA,CAAC,EAAEN,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACS,CAAP,GAAWR,SAAtB,IAAmCA;AANjC,GAAP;AAQD","sourcesContent":["/**\n * Rounds all elements of the given matrix using the given precision\n * @param matrix {Matrix} An affine matrix to round\n * @param [precision] {number} A precision to use for Math.round. Defaults to 10000000000 (meaning which rounds to the 10th digit after the comma).\n * @returns {Matrix} The rounded Affine Matrix\n */\nexport function smoothMatrix (matrix, precision = 10000000000) {\n  return {\n    a: Math.round(matrix.a * precision) / precision,\n    b: Math.round(matrix.b * precision) / precision,\n    c: Math.round(matrix.c * precision) / precision,\n    d: Math.round(matrix.d * precision) / precision,\n    e: Math.round(matrix.e * precision) / precision,\n    f: Math.round(matrix.f * precision) / precision\n  }\n}\n"]},"metadata":{},"sourceType":"module"}