{"ast":null,"code":"var _jsxFileName = \"/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Piechart.js\";\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Piechart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pieData: []\n    };\n  }\n\n  async componentDidMount() {\n    await fetch;\n    let response = await fetch(\"http://localhost:8080/api/feedback\", {\n      method: \"GET\"\n    });\n    let data = await response.json();\n    console.log(data); // let pieData = []\n\n    let pieData = {};\n\n    for (let i = 0; i < data.length; i++) {\n      const bool = data[i].boolean;\n\n      if (!(bool in pieData)) {\n        pieData[bool] = 1;\n      } else {\n        pieData[bool] += 1;\n      }\n    }\n\n    var pie = [];\n\n    for (var p in pieData) {\n      pie.push([p, pieData[p]]);\n    }\n\n    pie = pie.map(_ref => {\n      let [bool, count] = _ref;\n      return {\n        bool,\n        count\n      };\n    });\n    console.log(pie);\n    this.setState({\n      pieData: pie\n    });\n  }\n\n  render() {\n    const {\n      pieData\n    } = this.state;\n    const COLORS = ['#0088FE', '#00C49F']; //, '#FFBB28', '#FF8042'];\n\n    const RADIAN = Math.PI / 180;\n\n    const renderCustomizedLabel = _ref2 => {\n      let {\n        cx,\n        cy,\n        midAngle,\n        innerRadius,\n        outerRadius,\n        percent,\n        index\n      } = _ref2;\n      const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n      return /*#__PURE__*/_jsxDEV(\"text\", {\n        x: x,\n        y: y,\n        textAnchor: x > cx ? 'start' : 'end',\n        dominantBaseline: \"central\",\n        children: [`${(percent * 100).toFixed(0)}%`, cx]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 400,\n        height: 400,\n        children: [/*#__PURE__*/_jsxDEV(Pie // activeIndex={this.state.activeIndex}\n        // activeShape={renderActiveShape}\n        , {\n          data: pieData,\n          cx: \"50%\",\n          cy: \"50%\",\n          innerRadius: 60,\n          outerRadius: 80,\n          fill: \"#8884d8\",\n          dataKey: \"count\",\n          isAnimationActive: true,\n          label: renderCustomizedLabel // onMouseEnter={this.onPieEnter}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), pieData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Piechart;","map":{"version":3,"sources":["/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Piechart.js"],"names":["PieChart","Pie","Cell","Component","Piechart","constructor","props","state","pieData","componentDidMount","fetch","response","method","data","json","console","log","i","length","bool","boolean","pie","p","push","map","count","setState","render","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","entry"],"mappings":"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","sourcesContent":["import { PieChart, Pie, Cell } from \"recharts\";\nimport { Component } from \"react\";\n\nclass Piechart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pieData: []\n    };\n  }\n\n  async componentDidMount() {\n    await fetch;\n    let response = await fetch(\"http://localhost:8080/api/feedback\", {\n      method: \"GET\",\n    });\n\n    let data = await response.json();\n    console.log(data);\n    // let pieData = []\n    let pieData = {}\n    for (let i=0; i < data.length; i++) {\n        const bool = data[i].boolean;\n        if (!(bool in pieData)) {\n            pieData[bool] = 1;\n          } else {\n            pieData[bool] += 1;\n          }\n    }\n    var pie = []\n    for (var p in pieData) {\n        pie.push([p, pieData[p]]);\n    }\n  \n    pie = pie.map(([bool, count]) => ({ bool, count }));\n    console.log(pie);\n    this.setState({ \n        pieData: pie\n    })\n  }\n\n  render() {\n    const { pieData } = this.state;\n    const COLORS = ['#0088FE', '#00C49F'] //, '#FFBB28', '#FF8042'];\n    const RADIAN = Math.PI / 180;\n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n      const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n      return (\n        <text x={x} y={y} textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n          {`${(percent * 100).toFixed(0)}%`}\n          {cx}\n        </text>\n      );\n    };\n\n    return (\n      <div>\n        <PieChart width={400} height={400}>\n          <Pie\n            // activeIndex={this.state.activeIndex}\n            // activeShape={renderActiveShape}\n            data={pieData}\n            cx=\"50%\"\n            cy=\"50%\"\n            innerRadius={60}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"count\"\n            isAnimationActive={true}\n            label={renderCustomizedLabel}\n            // onMouseEnter={this.onPieEnter}\n          />\n            {pieData.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n        </PieChart>\n      </div>\n    );\n  }\n}\n\nexport default Piechart;\n"]},"metadata":{},"sourceType":"module"}