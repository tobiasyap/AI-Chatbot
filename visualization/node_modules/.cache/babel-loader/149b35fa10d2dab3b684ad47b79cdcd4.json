{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\", \"react\", \"prop-types\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"react\"), require(\"prop-types\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.react, global.propTypes);\n    global.Row = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports, _react, _propTypes) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  _react = _interopRequireDefault(_react);\n  _propTypes = _interopRequireDefault(_propTypes);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function Row(props) {\n    var getSelfClassName = function getSelfClassName() {\n      var _props$className;\n\n      return (_props$className = props.className) !== null && _props$className !== void 0 ? _props$className : false;\n    };\n\n    var getClassName = function getClassName() {\n      var className = \"\";\n\n      if (props.isDesktop) {\n        className = \"row is-desktop\";\n      } else if (props.isMobile) {\n        className = \"row is-mobile\";\n      } else {\n        className = \"row\";\n      }\n\n      if (props.isMultiline) {\n        className = className + \" is-multiline\";\n      }\n\n      if (getSelfClassName()) {\n        return \"\".concat(className, \" \").concat(getSelfClassName());\n      } else {\n        return className;\n      }\n    };\n\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      className: getClassName(),\n      style: props.style\n    }, props.children);\n  }\n\n  Row.propTypes = {\n    isMultiline: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),\n    isDesktop: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),\n    isMobile: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),\n    style: _propTypes.default.object,\n    className: _propTypes.default.string\n  };\n  var _default = Row;\n  _exports.default = _default;\n});","map":{"version":3,"sources":["../src/components/Row.js"],"names":["getSelfClassName","props","getClassName","className","style","Row","isMultiline","PropTypes","isDesktop","isMobile","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,WAAA,GAAA,CAAA,KAAA,EAAoB;AAClB,QAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,UAAA,gBAAA;;AAC7B,aAAA,CAAA,gBAAA,GAAOC,KAAK,CAAZ,SAAA,MAAA,IAAA,IAAA,gBAAA,KAAA,KAAA,CAAA,GAAA,gBAAA,GAAA,KAAA;AADF,KAAA;;AAIA,QAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,UAAIC,SAAS,GAAb,EAAA;;AACA,UAAIF,KAAK,CAAT,SAAA,EAAqB;AACnBE,QAAAA,SAAS,GAATA,gBAAAA;AADF,OAAA,MAEO,IAAIF,KAAK,CAAT,QAAA,EAAoB;AACzBE,QAAAA,SAAS,GAATA,eAAAA;AADK,OAAA,MAEA;AACLA,QAAAA,SAAS,GAATA,KAAAA;AACD;;AACD,UAAIF,KAAK,CAAT,WAAA,EAAuB;AACrBE,QAAAA,SAAS,GAAGA,SAAS,GAArBA,eAAAA;AACD;;AACD,UAAIH,gBAAJ,EAAA,EAAwB;AACtB,eAAA,GAAA,MAAA,CAAA,SAAA,EAAA,GAAA,EAAA,MAAA,CAAuBA,gBAAvB,EAAA,CAAA;AADF,OAAA,MAEO;AACL,eAAA,SAAA;AACD;AAhBH,KAAA;;AAmBA,WAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAEE,YAAhB,EAAA;AAAgC,MAAA,KAAK,EAAED,KAAK,CAACG;AAA7C,KAAA,EACGH,KAAK,CAFV,QACE,CADF;AAKD;;AAEDI,EAAAA,GAAG,CAAHA,SAAAA,GAAgB;AACdC,IAAAA,WAAW,EAAEC,UAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,UAAAA,CAAAA,OAAAA,CAAD,IAAA,EAAiBA,UAAAA,CAAAA,OAAAA,CADpC,MACmB,CAApBA,CADC;AAEdC,IAAAA,SAAS,EAAED,UAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,UAAAA,CAAAA,OAAAA,CAAD,IAAA,EAAiBA,UAAAA,CAAAA,OAAAA,CAFlC,MAEiB,CAApBA,CAFG;AAGdE,IAAAA,QAAQ,EAAEF,UAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,UAAAA,CAAAA,OAAAA,CAAD,IAAA,EAAiBA,UAAAA,CAAAA,OAAAA,CAHjC,MAGgB,CAApBA,CAHI;AAIdH,IAAAA,KAAK,EAAEG,UAAAA,CAAAA,OAAAA,CAJO,MAAA;AAKdJ,IAAAA,SAAS,EAAEI,UAAAA,CAAAA,OAAAA,CAAUG;AALP,GAAhBL;iBAQeA,G","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Row(props) {\n  const getSelfClassName = () => {\n    return props.className ?? false;\n  };\n\n  const getClassName = () => {\n    let className = \"\";\n    if (props.isDesktop) {\n      className = \"row is-desktop\";\n    } else if (props.isMobile) {\n      className = \"row is-mobile\";\n    } else {\n      className = \"row\";\n    }\n    if (props.isMultiline) {\n      className = className + \" is-multiline\";\n    }\n    if (getSelfClassName()) {\n      return `${className} ${getSelfClassName()}`;\n    } else {\n      return className;\n    }\n  };\n\n  return (\n    <div className={getClassName()} style={props.style}>\n      {props.children}\n    </div>\n  );\n}\n\nRow.propTypes = {\n  isMultiline: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  isDesktop: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  isMobile: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  style: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default Row;\n"]},"metadata":{},"sourceType":"script"}