{"ast":null,"code":"var _jsxFileName = \"/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/LTA-chatbot/visualization/src/components/Metric.js\";\nimport { Component } from \"react\";\nimport * as moment from \"moment\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { url } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Metric extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      time: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      let response = await fetch(`${url}/feedback`, {\n        method: \"GET\"\n      });\n      let data = await response.json(); // Obtaining latest time that feedback is created\n\n      let times = data.map(x => x.createdAt);\n      let latest = times[0];\n\n      for (let i = 0; i < times.length; i++) {\n        if (times[i] > latest) {\n          latest = times[i];\n        }\n      }\n\n      latest = new Date(latest);\n      this.setState({\n        count: data.length,\n        time: moment(latest)._i.toLocaleString() // Convert to Singapore Timezone\n\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const {\n      count,\n      time\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-display\",\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"title-name\",\n          children: \"Total Number of Queries Asked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: count ? /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"metric\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), \" There is no data yet!\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"title-name\",\n            children: \"Time of Last Asked Query\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), time ? /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"metric\",\n            children: time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), \" There is no data yet!\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Metric;","map":{"version":3,"sources":["/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/LTA-chatbot/visualization/src/components/Metric.js"],"names":["Component","moment","Fade","url","Metric","constructor","props","state","count","time","componentDidMount","response","fetch","method","data","json","times","map","x","createdAt","latest","i","length","Date","setState","_i","toLocaleString","err","console","log","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,GAAT,QAAoB,WAApB;;;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,GAAI,WAAR,EAAoB;AAC5CU,QAAAA,MAAM,EAAE;AADoC,OAApB,CAA1B;AAIA,UAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAjB,CALE,CAMF;;AACA,UAAIC,KAAK,GAAGF,IAAI,CAACG,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACC,SAAlB,CAAZ;AACA,UAAIC,MAAM,GAAGJ,KAAK,CAAC,CAAD,CAAlB;;AACA,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAIL,KAAK,CAACK,CAAD,CAAL,GAAWD,MAAf,EAAuB;AACrBA,UAAAA,MAAM,GAAGJ,KAAK,CAACK,CAAD,CAAd;AACD;AACF;;AACDD,MAAAA,MAAM,GAAG,IAAIG,IAAJ,CAASH,MAAT,CAAT;AACA,WAAKI,QAAL,CAAc;AACZhB,QAAAA,KAAK,EAAEM,IAAI,CAACQ,MADA;AAEZb,QAAAA,IAAI,EAAER,MAAM,CAACmB,MAAD,CAAN,CAAeK,EAAf,CAAkBC,cAAlB,EAFM,CAE8B;;AAF9B,OAAd;AAID,KAnBD,CAmBE,OAAMC,GAAN,EAAW;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEtB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkB,KAAKF,KAA7B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBACGC,KAAK,gBACJ;AAAG,YAAA,SAAS,EAAC,QAAb;AAAA,sBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADI,gBAGJ;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA,oBADF,4BAC+B,GAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,yBAFF,eAWE;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGC,IAAI,gBACH;AAAG,YAAA,SAAS,EAAC,QAAb;AAAA,sBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADG,gBAGH;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA,oBADF,4BAC+B,GAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AAhE4B;;AAmE/B,eAAeL,MAAf","sourcesContent":["import { Component } from \"react\";\nimport * as moment from \"moment\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { url } from \"../config\";\n\nclass Metric extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      time: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      let response = await fetch(`${url}/feedback`, {\n        method: \"GET\",\n      });\n  \n      let data = await response.json();\n      // Obtaining latest time that feedback is created\n      let times = data.map((x) => x.createdAt);\n      let latest = times[0];\n      for (let i = 0; i < times.length; i++) {\n        if (times[i] > latest) {\n          latest = times[i];\n        }\n      }\n      latest = new Date(latest);\n      this.setState({\n        count: data.length,\n        time: moment(latest)._i.toLocaleString(), // Convert to Singapore Timezone\n      });\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const { count, time } = this.state;\n\n    return (\n      <div className=\"row-display\">\n        <Fade>\n          <strong className=\"title-name\">Total Number of Queries Asked</strong>\n          <>\n            {count ? (\n              <b className=\"metric\">{count}</b>\n            ) : (\n              <div className=\"chart-title\">\n                <br /> There is no data yet!{\" \"}\n              </div>\n            )}\n          </>\n          <br/>\n          <div className=\"header\">\n            <strong className=\"title-name\">Time of Last Asked Query</strong>\n            {time ? (\n              <b className=\"metric\">{time}</b>\n            ) : (\n              <div className=\"chart-title\">\n                <br /> There is no data yet!{\" \"}\n              </div>\n            )}\n          </div>\n        </Fade>\n      </div>\n    );\n  }\n}\n\nexport default Metric;\n"]},"metadata":{},"sourceType":"module"}