{"ast":null,"code":"import { useRef, useState, useCallback, useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar useLatest = function (val) {\n  var ref = useRef(val);\n  ref.current = val;\n  return ref;\n};\n\nvar observerErr = \"ðŸ’¡ react-cool-dimensions: the browser doesn't support Resize Observer, please use polyfill: https://github.com/wellyshen/react-cool-dimensions#resizeobserver-polyfill\";\nvar borderBoxWarn = \"ðŸ’¡ react-cool-dimensions: the browser doesn't support border-box size, fallback to content-box size. Please see: https://github.com/wellyshen/react-cool-dimensions#border-box-size-measurement\";\n\nvar getCurrentBreakpoint = function getCurrentBreakpoint(bps, w) {\n  var curBp = \"\";\n  var max = -1;\n  Object.keys(bps).forEach(function (key) {\n    var val = bps[key];\n\n    if (w >= val && val > max) {\n      curBp = key;\n      max = val;\n    }\n  });\n  return curBp;\n};\n\nvar useDimensions = function useDimensions(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      useBorderBoxSize = _ref.useBorderBoxSize,\n      breakpoints = _ref.breakpoints,\n      updateOnBreakpointChange = _ref.updateOnBreakpointChange,\n      shouldUpdate = _ref.shouldUpdate,\n      onResize = _ref.onResize,\n      polyfill = _ref.polyfill;\n\n  var _useState = useState({\n    currentBreakpoint: \"\",\n    width: 0,\n    height: 0\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var prevSizeRef = useRef({});\n  var prevBreakpointRef = useRef();\n  var observerRef = useRef();\n  var warnedRef = useRef(false);\n  var ref = useRef();\n  var onResizeRef = useLatest(onResize);\n  var shouldUpdateRef = useLatest(shouldUpdate);\n  var unobserve = useCallback(function () {\n    if (observerRef.current) observerRef.current.disconnect();\n  }, []);\n  var observe = useCallback(function (element) {\n    if (element && element !== ref.current) {\n      unobserve();\n      ref.current = element;\n    }\n\n    if (observerRef.current && ref.current) observerRef.current.observe(ref.current);\n  }, [unobserve]);\n  useEffect(function () {\n    if ((!(\"ResizeObserver\" in window) || !(\"ResizeObserverEntry\" in window)) && !polyfill) {\n      console.error(observerErr);\n      return function () {\n        return null;\n      };\n    }\n\n    var raf = null; // eslint-disable-next-line compat/compat\n\n    observerRef.current = new (polyfill || ResizeObserver)(function (_ref2) {\n      var entry = _ref2[0];\n      raf = requestAnimationFrame(function () {\n        var contentBoxSize = entry.contentBoxSize,\n            borderBoxSize = entry.borderBoxSize,\n            contentRect = entry.contentRect;\n        var boxSize = contentBoxSize;\n        if (useBorderBoxSize) if (borderBoxSize) {\n          boxSize = borderBoxSize;\n        } else if (!warnedRef.current) {\n          console.warn(borderBoxWarn);\n          warnedRef.current = true;\n        } // @juggle/resize-observer polyfill has different data structure\n\n        boxSize = Array.isArray(boxSize) ? boxSize[0] : boxSize;\n        var width = boxSize ? boxSize.inlineSize : contentRect.width;\n        var height = boxSize ? boxSize.blockSize : contentRect.height;\n        if (width === prevSizeRef.current.width && height === prevSizeRef.current.height) return;\n        prevSizeRef.current = {\n          width: width,\n          height: height\n        };\n        var e = {\n          currentBreakpoint: \"\",\n          width: width,\n          height: height,\n          entry: entry,\n          observe: observe,\n          unobserve: unobserve\n        };\n\n        if (breakpoints) {\n          e.currentBreakpoint = getCurrentBreakpoint(breakpoints, width);\n\n          if (e.currentBreakpoint !== prevBreakpointRef.current) {\n            if (onResizeRef.current) onResizeRef.current(e);\n            prevBreakpointRef.current = e.currentBreakpoint;\n          }\n        } else if (onResizeRef.current) {\n          onResizeRef.current(e);\n        }\n\n        var next = {\n          currentBreakpoint: e.currentBreakpoint,\n          width: width,\n          height: height,\n          entry: entry\n        };\n        if (shouldUpdateRef.current && !shouldUpdateRef.current(next)) return;\n\n        if (!shouldUpdateRef.current && breakpoints && updateOnBreakpointChange) {\n          setState(function (prev) {\n            return prev.currentBreakpoint !== next.currentBreakpoint ? next : prev;\n          });\n          return;\n        }\n\n        setState(next);\n      });\n    });\n    observe();\n    return function () {\n      unobserve();\n      if (raf) cancelAnimationFrame(raf);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// eslint-disable-next-line react-hooks/exhaustive-deps\n  JSON.stringify(breakpoints), useBorderBoxSize, observe, unobserve, updateOnBreakpointChange]);\n  return _extends({}, state, {\n    observe: observe,\n    unobserve: unobserve\n  });\n};\n\nexport default useDimensions;\nexport { borderBoxWarn, observerErr };","map":{"version":3,"sources":["/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/node_modules/react-cool-dimensions/dist/index.esm.js"],"names":["useRef","useState","useCallback","useEffect","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","useLatest","val","ref","current","observerErr","borderBoxWarn","getCurrentBreakpoint","bps","w","curBp","max","keys","forEach","useDimensions","_temp","_ref","useBorderBoxSize","breakpoints","updateOnBreakpointChange","shouldUpdate","onResize","polyfill","_useState","currentBreakpoint","width","height","state","setState","prevSizeRef","prevBreakpointRef","observerRef","warnedRef","onResizeRef","shouldUpdateRef","unobserve","disconnect","observe","element","window","console","error","raf","ResizeObserver","_ref2","entry","requestAnimationFrame","contentBoxSize","borderBoxSize","contentRect","boxSize","warn","Array","isArray","inlineSize","blockSize","e","next","prev","cancelAnimationFrame","JSON","stringify"],"mappings":"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","sourcesContent":["import { useRef, useState, useCallback, useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar useLatest = (function (val) {\n  var ref = useRef(val);\n  ref.current = val;\n  return ref;\n});\n\nvar observerErr = \"ðŸ’¡ react-cool-dimensions: the browser doesn't support Resize Observer, please use polyfill: https://github.com/wellyshen/react-cool-dimensions#resizeobserver-polyfill\";\nvar borderBoxWarn = \"ðŸ’¡ react-cool-dimensions: the browser doesn't support border-box size, fallback to content-box size. Please see: https://github.com/wellyshen/react-cool-dimensions#border-box-size-measurement\";\n\nvar getCurrentBreakpoint = function getCurrentBreakpoint(bps, w) {\n  var curBp = \"\";\n  var max = -1;\n  Object.keys(bps).forEach(function (key) {\n    var val = bps[key];\n\n    if (w >= val && val > max) {\n      curBp = key;\n      max = val;\n    }\n  });\n  return curBp;\n};\n\nvar useDimensions = function useDimensions(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      useBorderBoxSize = _ref.useBorderBoxSize,\n      breakpoints = _ref.breakpoints,\n      updateOnBreakpointChange = _ref.updateOnBreakpointChange,\n      shouldUpdate = _ref.shouldUpdate,\n      onResize = _ref.onResize,\n      polyfill = _ref.polyfill;\n\n  var _useState = useState({\n    currentBreakpoint: \"\",\n    width: 0,\n    height: 0\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var prevSizeRef = useRef({});\n  var prevBreakpointRef = useRef();\n  var observerRef = useRef();\n  var warnedRef = useRef(false);\n  var ref = useRef();\n  var onResizeRef = useLatest(onResize);\n  var shouldUpdateRef = useLatest(shouldUpdate);\n  var unobserve = useCallback(function () {\n    if (observerRef.current) observerRef.current.disconnect();\n  }, []);\n  var observe = useCallback(function (element) {\n    if (element && element !== ref.current) {\n      unobserve();\n      ref.current = element;\n    }\n\n    if (observerRef.current && ref.current) observerRef.current.observe(ref.current);\n  }, [unobserve]);\n  useEffect(function () {\n    if ((!(\"ResizeObserver\" in window) || !(\"ResizeObserverEntry\" in window)) && !polyfill) {\n      console.error(observerErr);\n      return function () {\n        return null;\n      };\n    }\n\n    var raf = null; // eslint-disable-next-line compat/compat\n\n    observerRef.current = new (polyfill || ResizeObserver)(function (_ref2) {\n      var entry = _ref2[0];\n      raf = requestAnimationFrame(function () {\n        var contentBoxSize = entry.contentBoxSize,\n            borderBoxSize = entry.borderBoxSize,\n            contentRect = entry.contentRect;\n        var boxSize = contentBoxSize;\n        if (useBorderBoxSize) if (borderBoxSize) {\n          boxSize = borderBoxSize;\n        } else if (!warnedRef.current) {\n          console.warn(borderBoxWarn);\n          warnedRef.current = true;\n        } // @juggle/resize-observer polyfill has different data structure\n\n        boxSize = Array.isArray(boxSize) ? boxSize[0] : boxSize;\n        var width = boxSize ? boxSize.inlineSize : contentRect.width;\n        var height = boxSize ? boxSize.blockSize : contentRect.height;\n        if (width === prevSizeRef.current.width && height === prevSizeRef.current.height) return;\n        prevSizeRef.current = {\n          width: width,\n          height: height\n        };\n        var e = {\n          currentBreakpoint: \"\",\n          width: width,\n          height: height,\n          entry: entry,\n          observe: observe,\n          unobserve: unobserve\n        };\n\n        if (breakpoints) {\n          e.currentBreakpoint = getCurrentBreakpoint(breakpoints, width);\n\n          if (e.currentBreakpoint !== prevBreakpointRef.current) {\n            if (onResizeRef.current) onResizeRef.current(e);\n            prevBreakpointRef.current = e.currentBreakpoint;\n          }\n        } else if (onResizeRef.current) {\n          onResizeRef.current(e);\n        }\n\n        var next = {\n          currentBreakpoint: e.currentBreakpoint,\n          width: width,\n          height: height,\n          entry: entry\n        };\n        if (shouldUpdateRef.current && !shouldUpdateRef.current(next)) return;\n\n        if (!shouldUpdateRef.current && breakpoints && updateOnBreakpointChange) {\n          setState(function (prev) {\n            return prev.currentBreakpoint !== next.currentBreakpoint ? next : prev;\n          });\n          return;\n        }\n\n        setState(next);\n      });\n    });\n    observe();\n    return function () {\n      unobserve();\n      if (raf) cancelAnimationFrame(raf);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// eslint-disable-next-line react-hooks/exhaustive-deps\n  JSON.stringify(breakpoints), useBorderBoxSize, observe, unobserve, updateOnBreakpointChange]);\n  return _extends({}, state, {\n    observe: observe,\n    unobserve: unobserve\n  });\n};\n\nexport default useDimensions;\nexport { borderBoxWarn, observerErr };\n"]},"metadata":{},"sourceType":"module"}