{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\", \"react\", \"prop-types\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"react\"), require(\"prop-types\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.react, global.propTypes);\n    global.Notification = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports, _react, _propTypes) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  _react = _interopRequireDefault(_react);\n  _propTypes = _interopRequireDefault(_propTypes);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function Notification(props) {\n    var getSelfClassName = function getSelfClassName() {\n      var _props$className;\n\n      return (_props$className = props.className) !== null && _props$className !== void 0 ? _props$className : false;\n    };\n\n    var getClassName = function getClassName() {\n      var className = \"\";\n\n      if (props.isToast) {\n        className = \"sgds-notification is-toast\";\n      } else {\n        className = \"sgds-notification\";\n      }\n\n      if (props.colour) {\n        className = \"\".concat(className, \" is-\").concat(props.colour);\n      }\n\n      if (getSelfClassName()) {\n        return \"\".concat(className, \" \").concat(getSelfClassName());\n      } else {\n        return className;\n      }\n    };\n\n    var getIcon = function getIcon() {\n      return \"sgds-icon \".concat(props.icon, \" is-size-4\");\n    };\n\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      className: getClassName()\n    }, /*#__PURE__*/_react.default.createElement(\"div\", {\n      className: \"sgds-notification-detail\"\n    }, props.icon ? /*#__PURE__*/_react.default.createElement(\"span\", {\n      className: getIcon()\n    }) : null, /*#__PURE__*/_react.default.createElement(\"div\", {\n      className: \"sgds-notification-content\"\n    }, /*#__PURE__*/_react.default.createElement(\"p\", {\n      className: \"has-text-weight-bold\"\n    }, props.title), /*#__PURE__*/_react.default.createElement(\"p\", null, props.content)), props.closable ? /*#__PURE__*/_react.default.createElement(\"span\", {\n      className: \"delete\",\n      onClick: function onClick() {\n        props.onClose();\n      }\n    }) : null));\n  }\n\n  Notification.propTypes = {\n    isToast: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),\n    title: _propTypes.default.string,\n    content: _propTypes.default.string,\n    icon: _propTypes.default.string,\n    closable: _propTypes.default.bool,\n    onClose: _propTypes.default.func,\n    colour: _propTypes.default.string,\n    style: _propTypes.default.object,\n    className: _propTypes.default.string\n  };\n  var _default = Notification;\n  _exports.default = _default;\n});","map":{"version":3,"sources":["../src/components/Notification.js"],"names":["getSelfClassName","props","getClassName","className","getIcon","Notification","isToast","PropTypes","title","content","icon","closable","onClose","colour","style","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Notification(props) {\n  const getSelfClassName = () => {\n    return props.className ?? false;\n  };\n\n  const getClassName = () => {\n    let className = \"\";\n    if (props.isToast) {\n      className = \"sgds-notification is-toast\";\n    } else {\n      className = \"sgds-notification\";\n    }\n    if (props.colour) {\n      className = `${className} is-${props.colour}`;\n    }\n    if (getSelfClassName()) {\n      return `${className} ${getSelfClassName()}`;\n    } else {\n      return className;\n    }\n  };\n\n  const getIcon = () => {\n    return `sgds-icon ${props.icon} is-size-4`;\n  };\n\n  return (\n    <div className={getClassName()}>\n      <div className=\"sgds-notification-detail\">\n        {props.icon ? <span className={getIcon()}></span> : null}\n        <div className=\"sgds-notification-content\">\n          <p className=\"has-text-weight-bold\">{props.title}</p>\n          <p>{props.content}</p>\n        </div>\n        {props.closable ? (\n          <span\n            className=\"delete\"\n            onClick={() => {\n              props.onClose();\n            }}\n          ></span>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  isToast: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  title: PropTypes.string,\n  content: PropTypes.string,\n  icon: PropTypes.string,\n  closable: PropTypes.bool,\n  onClose: PropTypes.func,\n  colour: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default Notification;\n"]},"metadata":{},"sourceType":"script"}