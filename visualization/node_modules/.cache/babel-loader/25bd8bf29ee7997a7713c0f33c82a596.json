{"ast":null,"code":"/*! @license https://github.com/onury/invert-color */\n!function (r, n) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = n() : \"function\" == typeof define && define.amd ? define(n) : r.invert = n();\n}(this, function () {\n  \"use strict\";\n\n  var t = Math.sqrt(1.05 * .05) - .05,\n      n = /^(?:[0-9a-f]{3}){1,2}$/i,\n      i = {\n    black: \"#000000\",\n    white: \"#ffffff\",\n    threshold: t\n  };\n\n  function o(r) {\n    if (\"#\" === r.slice(0, 1) && (r = r.slice(1)), !n.test(r)) throw new Error('Invalid HEX color: \"' + r + '\"');\n    return 3 === r.length && (r = r[0] + r[0] + r[1] + r[1] + r[2] + r[2]), [parseInt(r.slice(0, 2), 16), parseInt(r.slice(2, 4), 16), parseInt(r.slice(4, 6), 16)];\n  }\n\n  function f(r) {\n    if (!r) throw new Error(\"Invalid color value\");\n    return Array.isArray(r) ? r : \"string\" == typeof r ? o(r) : [r.r, r.g, r.b];\n  }\n\n  function u(r, n, t) {\n    var e = !0 === n ? i : Object.assign({}, i, n);\n    return function (r) {\n      var n,\n          t,\n          e = [];\n\n      for (n = 0; n < r.length; n++) t = r[n] / 255, e[n] = t <= .03928 ? t / 12.92 : Math.pow((t + .055) / 1.055, 2.4);\n\n      return .2126 * e[0] + .7152 * e[1] + .0722 * e[2];\n    }(r) > e.threshold ? t ? o(e.black) : e.black : t ? o(e.white) : e.white;\n  }\n\n  function r(r, n) {\n    return void 0 === n && (n = !1), r = f(r), n ? u(r, n) : \"#\" + r.map(function (r) {\n      return n = (255 - r).toString(16), void 0 === t && (t = 2), (new Array(t).join(\"0\") + n).slice(-t);\n      var n, t;\n    }).join(\"\");\n  }\n\n  return function (r) {\n    function n(r, n) {\n      r = f(r);\n      var t,\n          e = n ? u(r, n, !0) : r.map(function (r) {\n        return 255 - r;\n      });\n      return {\n        r: (t = e)[0],\n        g: t[1],\n        b: t[2]\n      };\n    }\n\n    r.asRGB = n, r.asRgbArray = function (r, n) {\n      return r = f(r), n ? u(r, n, !0) : r.map(function (r) {\n        return 255 - r;\n      });\n    }, r.defaultThreshold = t, r.asRgbObject = n;\n  }(r || (r = {})), r;\n});","map":{"version":3,"sources":["/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/node_modules/invert-color/lib/invert.min.js"],"names":["r","n","exports","module","define","amd","invert","t","Math","sqrt","i","black","white","threshold","o","slice","test","Error","length","parseInt","f","Array","isArray","g","b","u","e","Object","assign","pow","map","toString","join","asRGB","asRgbArray","defaultThreshold","asRgbObject"],"mappings":"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","sourcesContent":["/*! @license https://github.com/onury/invert-color */\n!function(r,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):r.invert=n()}(this,function(){\"use strict\";var t=Math.sqrt(1.05*.05)-.05,n=/^(?:[0-9a-f]{3}){1,2}$/i,i={black:\"#000000\",white:\"#ffffff\",threshold:t};function o(r){if(\"#\"===r.slice(0,1)&&(r=r.slice(1)),!n.test(r))throw new Error('Invalid HEX color: \"'+r+'\"');return 3===r.length&&(r=r[0]+r[0]+r[1]+r[1]+r[2]+r[2]),[parseInt(r.slice(0,2),16),parseInt(r.slice(2,4),16),parseInt(r.slice(4,6),16)]}function f(r){if(!r)throw new Error(\"Invalid color value\");return Array.isArray(r)?r:\"string\"==typeof r?o(r):[r.r,r.g,r.b]}function u(r,n,t){var e=!0===n?i:Object.assign({},i,n);return function(r){var n,t,e=[];for(n=0;n<r.length;n++)t=r[n]/255,e[n]=t<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4);return.2126*e[0]+.7152*e[1]+.0722*e[2]}(r)>e.threshold?t?o(e.black):e.black:t?o(e.white):e.white}function r(r,n){return void 0===n&&(n=!1),r=f(r),n?u(r,n):\"#\"+r.map(function(r){return n=(255-r).toString(16),void 0===t&&(t=2),(new Array(t).join(\"0\")+n).slice(-t);var n,t}).join(\"\")}return function(r){function n(r,n){r=f(r);var t,e=n?u(r,n,!0):r.map(function(r){return 255-r});return{r:(t=e)[0],g:t[1],b:t[2]}}r.asRGB=n,r.asRgbArray=function(r,n){return r=f(r),n?u(r,n,!0):r.map(function(r){return 255-r})},r.defaultThreshold=t,r.asRgbObject=n}(r||(r={})),r});"]},"metadata":{},"sourceType":"script"}