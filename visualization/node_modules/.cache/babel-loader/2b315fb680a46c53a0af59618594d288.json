{"ast":null,"code":"var _jsxFileName = \"/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Piechart.js\";\nimport { PieChart, Pie, Cell, Sector, ResponsiveContainer } from \"recharts\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Piechart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pieData: [],\n      activeIndex: 0\n    };\n  }\n\n  async componentDidMount() {\n    await fetch;\n    let response = await fetch(\"http://localhost:8080/api/feedback\", {\n      method: \"GET\"\n    });\n    let data = await response.json();\n    let pieData = {};\n\n    for (let i = 0; i < data.length; i++) {\n      const bool = data[i].boolean;\n\n      if (!(bool in pieData)) {\n        pieData[bool] = 1;\n      } else {\n        pieData[bool] += 1;\n      }\n    }\n\n    var pie = [];\n\n    for (var p in pieData) {\n      pie.push([p, pieData[p]]);\n    }\n\n    pie = pie.map(_ref => {\n      let [bool, count] = _ref;\n      return {\n        bool,\n        count\n      };\n    });\n    console.log(pie);\n    this.setState({\n      pieData: pie\n    });\n  }\n\n  render() {\n    const {\n      pieData\n    } = this.state;\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n    const renderActiveShape = props => {\n      const RADIAN = Math.PI / 180;\n      const {\n        cx,\n        cy,\n        midAngle,\n        innerRadius,\n        outerRadius,\n        startAngle,\n        endAngle,\n        fill,\n        payload,\n        percent,\n        value\n      } = props;\n      console.log(payload);\n      const sin = Math.sin(-RADIAN * midAngle);\n      const cos = Math.cos(-RADIAN * midAngle);\n      const sx = cx + (outerRadius + 10) * cos;\n      const sy = cy + (outerRadius + 10) * sin;\n      const mx = cx + (outerRadius + 30) * cos;\n      const my = cy + (outerRadius + 30) * sin;\n      const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n      const ey = my;\n      const textAnchor = cos >= 0 ? 'start' : 'end'; // const RADIAN = Math.PI / 180;\n      // const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n      //   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n      //   const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      //   const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          x: cx,\n          y: cy,\n          dy: 8,\n          textAnchor: \"middle\",\n          fill: fill,\n          children: payload.bool\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Sector, {\n          cx: cx,\n          cy: cy,\n          innerRadius: innerRadius,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          fill: fill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Sector, {\n          cx: cx,\n          cy: cy,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          innerRadius: outerRadius + 6,\n          outerRadius: outerRadius + 10,\n          fill: fill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: `M${sx},${sy}L${mx},${my}L${ex},${ey}`,\n          stroke: fill,\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: ex,\n          cy: ey,\n          r: 2,\n          fill: fill,\n          stroke: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: ex + (cos >= 0 ? 1 : -1) * 12,\n          y: ey,\n          textAnchor: textAnchor,\n          fill: \"#333\",\n          children: `${value}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: ex + (cos >= 0 ? 1 : -1) * 12,\n          y: ey,\n          dy: 18,\n          textAnchor: textAnchor,\n          fill: \"#999\",\n          children: `(Percent: ${(percent * 100).toFixed(2)}%)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this); // <text x={x} y={y} textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      //   {`${(percent * 100).toFixed(0)}%`}\n      // </text>\n      // );\n    };\n\n    const onPieEnter = (_, index) => {\n      this.setState({\n        activeIndex: index\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pie\",\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 400,\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(Pie // activeIndex={this.state.activeIndex}\n        // activeShape={renderActiveShape}\n        , {\n          activeIndex: this.state.activeIndex,\n          activeShape: renderActiveShape,\n          data: pieData,\n          cx: 120,\n          cy: 200,\n          innerRadius: 60,\n          outerRadius: 80,\n          fill: \"#8884d8\",\n          dataKey: \"count\",\n          isAnimationActive: true,\n          onMouseEnter: onPieEnter,\n          children: pieData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Piechart;","map":{"version":3,"sources":["/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Piechart.js"],"names":["PieChart","Pie","Cell","Sector","ResponsiveContainer","Component","Piechart","constructor","props","state","pieData","activeIndex","componentDidMount","fetch","response","method","data","json","i","length","bool","boolean","pie","p","push","map","count","console","log","setState","render","COLORS","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","toFixed","onPieEnter","_","index","entry"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,MAA9B,EAAsCC,mBAAtC,QAAiE,UAAjE;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,UAAMC,KAAN;AACA,QAAIC,QAAQ,GAAG,MAAMD,KAAK,CAAC,oCAAD,EAAuC;AAC/DE,MAAAA,MAAM,EAAE;AADuD,KAAvC,CAA1B;AAIA,QAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,QAAIP,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIQ,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGF,IAAI,CAACG,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAChC,YAAME,IAAI,GAAGJ,IAAI,CAACE,CAAD,CAAJ,CAAQG,OAArB;;AACA,UAAI,EAAED,IAAI,IAAIV,OAAV,CAAJ,EAAwB;AACpBA,QAAAA,OAAO,CAACU,IAAD,CAAP,GAAgB,CAAhB;AACD,OAFH,MAES;AACLV,QAAAA,OAAO,CAACU,IAAD,CAAP,IAAiB,CAAjB;AACD;AACN;;AACD,QAAIE,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAT,IAAcb,OAAd,EAAuB;AACnBY,MAAAA,GAAG,CAACE,IAAJ,CAAS,CAACD,CAAD,EAAIb,OAAO,CAACa,CAAD,CAAX,CAAT;AACH;;AAEDD,IAAAA,GAAG,GAAGA,GAAG,CAACG,GAAJ,CAAQ;AAAA,UAAC,CAACL,IAAD,EAAOM,KAAP,CAAD;AAAA,aAAoB;AAAEN,QAAAA,IAAF;AAAQM,QAAAA;AAAR,OAApB;AAAA,KAAR,CAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA,SAAKO,QAAL,CAAc;AACVnB,MAAAA,OAAO,EAAEY;AADC,KAAd;AAGD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,UAAMsB,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAf;;AAEA,UAAMC,iBAAiB,GAAIxB,KAAD,IAAW;AACnC,YAAMyB,MAAM,GAAGC,IAAI,CAACC,EAAL,GAAU,GAAzB;AACA,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,EAAN;AAAUC,QAAAA,QAAV;AAAoBC,QAAAA,WAApB;AAAiCC,QAAAA,WAAjC;AAA8CC,QAAAA,UAA9C;AAA0DC,QAAAA,QAA1D;AAAoEC,QAAAA,IAApE;AAA0EC,QAAAA,OAA1E;AAAmFC,QAAAA,OAAnF;AAA4FC,QAAAA;AAA5F,UAAsGtC,KAA5G;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,OAAZ;AACA,YAAMG,GAAG,GAAGb,IAAI,CAACa,GAAL,CAAS,CAACd,MAAD,GAAUK,QAAnB,CAAZ;AACA,YAAMU,GAAG,GAAGd,IAAI,CAACc,GAAL,CAAS,CAACf,MAAD,GAAUK,QAAnB,CAAZ;AACA,YAAMW,EAAE,GAAGb,EAAE,GAAG,CAACI,WAAW,GAAG,EAAf,IAAqBQ,GAArC;AACA,YAAME,EAAE,GAAGb,EAAE,GAAG,CAACG,WAAW,GAAG,EAAf,IAAqBO,GAArC;AACA,YAAMI,EAAE,GAAGf,EAAE,GAAG,CAACI,WAAW,GAAG,EAAf,IAAqBQ,GAArC;AACA,YAAMI,EAAE,GAAGf,EAAE,GAAG,CAACG,WAAW,GAAG,EAAf,IAAqBO,GAArC;AACA,YAAMM,EAAE,GAAGF,EAAE,GAAG,CAACH,GAAG,IAAI,CAAP,GAAW,CAAX,GAAe,CAAC,CAAjB,IAAsB,EAAtC;AACA,YAAMM,EAAE,GAAGF,EAAX;AACA,YAAMG,UAAU,GAAGP,GAAG,IAAI,CAAP,GAAW,OAAX,GAAqB,KAAxC,CAZmC,CAarC;AACA;AACA;AACA;AACA;;AAEE,0BACE;AAAA,gCACF;AAAM,UAAA,CAAC,EAAEZ,EAAT;AAAa,UAAA,CAAC,EAAEC,EAAhB;AAAoB,UAAA,EAAE,EAAE,CAAxB;AAA2B,UAAA,UAAU,EAAC,QAAtC;AAA+C,UAAA,IAAI,EAAEM,IAArD;AAAA,oBACGC,OAAO,CAACxB;AADX;AAAA;AAAA;AAAA;AAAA,gBADE,eAIF,QAAC,MAAD;AACE,UAAA,EAAE,EAAEgB,EADN;AAEE,UAAA,EAAE,EAAEC,EAFN;AAGE,UAAA,WAAW,EAAEE,WAHf;AAIE,UAAA,WAAW,EAAEC,WAJf;AAKE,UAAA,UAAU,EAAEC,UALd;AAME,UAAA,QAAQ,EAAEC,QANZ;AAOE,UAAA,IAAI,EAAEC;AAPR;AAAA;AAAA;AAAA;AAAA,gBAJE,eAaF,QAAC,MAAD;AACE,UAAA,EAAE,EAAEP,EADN;AAEE,UAAA,EAAE,EAAEC,EAFN;AAGE,UAAA,UAAU,EAAEI,UAHd;AAIE,UAAA,QAAQ,EAAEC,QAJZ;AAKE,UAAA,WAAW,EAAEF,WAAW,GAAG,CAL7B;AAME,UAAA,WAAW,EAAEA,WAAW,GAAG,EAN7B;AAOE,UAAA,IAAI,EAAEG;AAPR;AAAA;AAAA;AAAA;AAAA,gBAbE,eAsBF;AAAM,UAAA,CAAC,EAAG,IAAGM,EAAG,IAAGC,EAAG,IAAGC,EAAG,IAAGC,EAAG,IAAGC,EAAG,IAAGC,EAAG,EAA9C;AAAiD,UAAA,MAAM,EAAEX,IAAzD;AAA+D,UAAA,IAAI,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,gBAtBE,eAuBF;AAAQ,UAAA,EAAE,EAAEU,EAAZ;AAAgB,UAAA,EAAE,EAAEC,EAApB;AAAwB,UAAA,CAAC,EAAE,CAA3B;AAA8B,UAAA,IAAI,EAAEX,IAApC;AAA0C,UAAA,MAAM,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAvBE,eAwBF;AAAM,UAAA,CAAC,EAAEU,EAAE,GAAG,CAACL,GAAG,IAAI,CAAP,GAAW,CAAX,GAAe,CAAC,CAAjB,IAAsB,EAApC;AAAwC,UAAA,CAAC,EAAEM,EAA3C;AAA+C,UAAA,UAAU,EAAEC,UAA3D;AAAuE,UAAA,IAAI,EAAC,MAA5E;AAAA,oBAAqF,GAAET,KAAM;AAA7F;AAAA;AAAA;AAAA;AAAA,gBAxBE,eAyBF;AAAM,UAAA,CAAC,EAAEO,EAAE,GAAG,CAACL,GAAG,IAAI,CAAP,GAAW,CAAX,GAAe,CAAC,CAAjB,IAAsB,EAApC;AAAwC,UAAA,CAAC,EAAEM,EAA3C;AAA+C,UAAA,EAAE,EAAE,EAAnD;AAAuD,UAAA,UAAU,EAAEC,UAAnE;AAA+E,UAAA,IAAI,EAAC,MAApF;AAAA,oBACI,aAAY,CAACV,OAAO,GAAG,GAAX,EAAgBW,OAAhB,CAAwB,CAAxB,CAA2B;AAD3C;AAAA;AAAA;AAAA;AAAA,gBAzBE;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAnBmC,CAkDjC;AACA;AACA;AACF;AACD,KAtDD;;AAwDA,UAAMC,UAAU,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC/B,WAAK9B,QAAL,CAAc;AACZlB,QAAAA,WAAW,EAAEgD;AADD,OAAd;AAGD,KAJD;;AAMA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,GAAjB;AAAsB,QAAA,MAAM,EAAE,GAA9B;AAAA,+BACE,QAAC,GAAD,CACE;AACA;AAFF;AAGE,UAAA,WAAW,EAAE,KAAKlD,KAAL,CAAWE,WAH1B;AAIE,UAAA,WAAW,EAAEqB,iBAJf;AAKE,UAAA,IAAI,EAAEtB,OALR;AAME,UAAA,EAAE,EAAE,GANN;AAOE,UAAA,EAAE,EAAE,GAPN;AAQE,UAAA,WAAW,EAAE,EARf;AASE,UAAA,WAAW,EAAE,EATf;AAUE,UAAA,IAAI,EAAC,SAVP;AAWE,UAAA,OAAO,EAAC,OAXV;AAYE,UAAA,iBAAiB,EAAE,IAZrB;AAaE,UAAA,YAAY,EAAE+C,UAbhB;AAAA,oBAeG/C,OAAO,CAACe,GAAR,CAAY,CAACmC,KAAD,EAAQD,KAAR,kBACX,QAAC,IAAD;AAA4B,YAAA,IAAI,EAAE5B,MAAM,CAAC4B,KAAK,GAAG5B,MAAM,CAACZ,MAAhB;AAAxC,aAAY,QAAOwC,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA,kBADD;AAfH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AAjI8B;;AAoIjC,eAAerD,QAAf","sourcesContent":["import { PieChart, Pie, Cell, Sector, ResponsiveContainer } from \"recharts\";\nimport { Component } from \"react\";\n\nclass Piechart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pieData: [],\n      activeIndex: 0\n    };\n  }\n\n  async componentDidMount() {\n    await fetch;\n    let response = await fetch(\"http://localhost:8080/api/feedback\", {\n      method: \"GET\",\n    });\n\n    let data = await response.json();\n    let pieData = {}\n    for (let i=0; i < data.length; i++) {\n        const bool = data[i].boolean;\n        if (!(bool in pieData)) {\n            pieData[bool] = 1;\n          } else {\n            pieData[bool] += 1;\n          }\n    }\n    var pie = []\n    for (var p in pieData) {\n        pie.push([p, pieData[p]]);\n    }\n  \n    pie = pie.map(([bool, count]) => ({ bool, count }));\n    console.log(pie);\n    this.setState({ \n        pieData: pie\n    })\n  }\n\n  render() {\n    const { pieData } = this.state;\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n    const renderActiveShape = (props) => {\n      const RADIAN = Math.PI / 180;\n      const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle, fill, payload, percent, value } = props;\n      console.log(payload)\n      const sin = Math.sin(-RADIAN * midAngle);\n      const cos = Math.cos(-RADIAN * midAngle);\n      const sx = cx + (outerRadius + 10) * cos;\n      const sy = cy + (outerRadius + 10) * sin;\n      const mx = cx + (outerRadius + 30) * cos;\n      const my = cy + (outerRadius + 30) * sin;\n      const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n      const ey = my;\n      const textAnchor = cos >= 0 ? 'start' : 'end';\n    // const RADIAN = Math.PI / 180;\n    // const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n    //   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    //   const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    //   const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n      return (\n        <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.bool}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`${value}`}</text>\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n        {`(Percent: ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n      )\n        // <text x={x} y={y} textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n        //   {`${(percent * 100).toFixed(0)}%`}\n        // </text>\n      // );\n    };\n\n    const onPieEnter = (_, index) => {\n      this.setState({\n        activeIndex: index,\n      });\n    };\n\n    return (\n      <div className=\"pie\">\n      {/* <ResponsiveContainer width=\"100%\" height=\"100%\"> */}\n        <PieChart width={400} height={400}>\n          <Pie\n            // activeIndex={this.state.activeIndex}\n            // activeShape={renderActiveShape}\n            activeIndex={this.state.activeIndex}\n            activeShape={renderActiveShape}\n            data={pieData}\n            cx={120}\n            cy={200}\n            innerRadius={60}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"count\"\n            isAnimationActive={true}\n            onMouseEnter={onPieEnter}\n          >\n            {pieData.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n          </Pie>\n        </PieChart>\n        </div>\n    );\n  }\n}\n\nexport default Piechart;\n"]},"metadata":{},"sourceType":"module"}