{"ast":null,"code":"var _jsxFileName = \"/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Wordcloud.js\";\nimport { Component } from 'react';\nimport ReactWordcloud from 'react-wordcloud';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Wordcloud extends Component {\n  constructor(props) {\n    super(props); // this.loadData = this.loadData.bind(this);\n\n    this.state = {\n      wordData: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      let response = await fetch(\"http://localhost:8080/api/feedback\", {\n        method: \"GET\"\n      });\n      let data = await response.json();\n      let wordFreq = [];\n      let allWords = {};\n      console.log(data); // for (let i = 0; i < data.length; i++) {\n      //   var words = data[i].user_query.split(\" \");\n      //   for (let j = 0; j < words.length; j++) {\n      //     let word = words[j].toLowerCase();\n      //     if (!(word in allWords)) {\n      //       allWords[word] = 1;\n      //     } else {\n      //       allWords[word] += 1;\n      //     }\n      //   }\n      // }\n      // for (var word in allWords) {\n      //   wordFreq.push([word, allWords[word]]);\n      // }\n      // wordFreq = wordFreq.sort((a, b) => b[1] - a[1]);\n      // wordFreq = wordFreq.map(([word, count]) => ({ word, count }));\n      // await this.setState({\n      //   wordData: wordFreq.slice(0,10),\n      // });\n      // console.log(this.state.wordData);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const {\n      wordData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactWordcloud, {\n        words: wordData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Wordcloud;","map":{"version":3,"sources":["/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Wordcloud.js"],"names":["Component","ReactWordcloud","Wordcloud","constructor","props","state","wordData","componentDidMount","response","fetch","method","data","json","wordFreq","allWords","console","log","err","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,iBAA3B;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAC9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,EAAuC;AAC/DC,QAAAA,MAAM,EAAE;AADuD,OAAvC,CAA1B;AAIA,UAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAjB;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,QAAQ,GAAG,EAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EARE,CASF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KA7BD,CA6BE,OAAMM,GAAN,EAAW;AACXF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AAEA,wBACE;AAAA,6BACI,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AApD6B;;AAuDhC,eAAeJ,SAAf","sourcesContent":["import { Component } from 'react';\nimport ReactWordcloud from 'react-wordcloud';\n\nclass Wordcloud extends Component {\n    constructor(props) {\n      super(props);\n      // this.loadData = this.loadData.bind(this);\n      this.state = {\n        wordData: [],\n      };\n    }\n  \n    async componentDidMount() {\n      try {\n        let response = await fetch(\"http://localhost:8080/api/feedback\", {\n          method: \"GET\",\n        });\n  \n        let data = await response.json();\n        let wordFreq = [];\n        let allWords = {};\n        console.log(data)\n        // for (let i = 0; i < data.length; i++) {\n        //   var words = data[i].user_query.split(\" \");\n        //   for (let j = 0; j < words.length; j++) {\n        //     let word = words[j].toLowerCase();\n        //     if (!(word in allWords)) {\n        //       allWords[word] = 1;\n        //     } else {\n        //       allWords[word] += 1;\n        //     }\n        //   }\n        // }\n        // for (var word in allWords) {\n        //   wordFreq.push([word, allWords[word]]);\n        // }\n        // wordFreq = wordFreq.sort((a, b) => b[1] - a[1]);\n        // wordFreq = wordFreq.map(([word, count]) => ({ word, count }));\n        // await this.setState({\n        //   wordData: wordFreq.slice(0,10),\n        // });\n        // console.log(this.state.wordData);\n      } catch(err) {\n        console.log(err)\n      }\n    };\n  \n    render() {\n      const { wordData } = this.state;\n  \n      return (\n        <div>\n            <ReactWordcloud words={wordData} />\n        </div>\n      );\n    }\n  }\n  \n  export default Wordcloud;"]},"metadata":{},"sourceType":"module"}