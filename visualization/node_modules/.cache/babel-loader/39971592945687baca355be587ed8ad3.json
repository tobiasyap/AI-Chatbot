{"ast":null,"code":"var _jsxFileName = \"/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/LTA-chatbot/visualization/src/components/Metric.js\";\nimport { Component } from \"react\";\nimport * as moment from \"moment\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { url } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Metric extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      time: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    let response = await fetch(`${url}/feedback`, {\n      method: \"GET\"\n    });\n    let data = await response.json(); // Obtaining latest time that feedback is created\n\n    let times = data.map(x => x.createdAt);\n    let latest = times[0];\n\n    for (let i = 0; i < times.length; i++) {\n      if (times[i] > latest) {\n        latest = times[i];\n      }\n    }\n\n    latest = new Date(latest);\n    this.setState({\n      count: data.length,\n      time: moment(latest)._i.toLocaleString() // Convert to Singapore Timezone\n\n    });\n  }\n\n  render() {\n    const {\n      count,\n      time\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-display\",\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"title-name\",\n          children: \"Total Number of Queries Asked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: count ? /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"metric\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 44\n            }, this), \" There is no data yet! \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"title-name\",\n          children: \"Time of Last Asked Query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"metric\",\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Metric;","map":{"version":3,"sources":["/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/LTA-chatbot/visualization/src/components/Metric.js"],"names":["Component","moment","Fade","url","Metric","constructor","props","state","count","time","componentDidMount","response","fetch","method","data","json","times","map","x","createdAt","latest","i","length","Date","setState","_i","toLocaleString","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,GAAT,QAAoB,WAApB;;;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,GAAI,WAAR,EAAoB;AAC5CU,MAAAA,MAAM,EAAE;AADoC,KAApB,CAA1B;AAIA,QAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAjB,CALwB,CAMxB;;AACA,QAAIC,KAAK,GAAGF,IAAI,CAACG,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACC,SAAlB,CAAZ;AACA,QAAIC,MAAM,GAAGJ,KAAK,CAAC,CAAD,CAAlB;;AACA,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIL,KAAK,CAACK,CAAD,CAAL,GAAWD,MAAf,EAAuB;AACrBA,QAAAA,MAAM,GAAGJ,KAAK,CAACK,CAAD,CAAd;AACD;AACF;;AACDD,IAAAA,MAAM,GAAG,IAAIG,IAAJ,CAASH,MAAT,CAAT;AACA,SAAKI,QAAL,CAAc;AACZhB,MAAAA,KAAK,EAAEM,IAAI,CAACQ,MADA;AAEZb,MAAAA,IAAI,EAAER,MAAM,CAACmB,MAAD,CAAN,CAAeK,EAAf,CAAkBC,cAAlB,EAFM,CAE8B;;AAF9B,KAAd;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkB,KAAKF,KAA7B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBACDC,KAAK,gBACJ;AAAG,YAAA,SAAS,EAAC,QAAb;AAAA,sBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADI,gBAEA;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCAA6B;AAAA;AAAA;AAAA;AAAA,oBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ,yBAFF,eAOE;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AAAG,UAAA,SAAS,EAAC,QAAb;AAAA,oBAAuBC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAlD4B;;AAqD/B,eAAeL,MAAf","sourcesContent":["import { Component } from \"react\";\nimport * as moment from \"moment\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { url } from \"../config\";\n\nclass Metric extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      time: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    let response = await fetch(`${url}/feedback`, {\n      method: \"GET\",\n    });\n\n    let data = await response.json();\n    // Obtaining latest time that feedback is created\n    let times = data.map((x) => x.createdAt);\n    let latest = times[0];\n    for (let i = 0; i < times.length; i++) {\n      if (times[i] > latest) {\n        latest = times[i];\n      }\n    }\n    latest = new Date(latest);\n    this.setState({\n      count: data.length,\n      time: moment(latest)._i.toLocaleString(), // Convert to Singapore Timezone\n    });\n  }\n\n  render() {\n    const { count, time } = this.state;\n\n    return (\n      <div className=\"row-display\">\n        <Fade>\n          <strong className=\"title-name\">Total Number of Queries Asked</strong>\n          <>\n        {count ? (\n          <b className=\"metric\">{count}</b>\n        ) : ( <div className=\"chart-title\"><br/> There is no data yet! </div> ) }\n        </>\n          <br />\n          <br />\n          <br />\n          <strong className=\"title-name\">Time of Last Asked Query</strong>\n          <b className=\"metric\">{time}</b>\n        </Fade>\n      </div>\n    );\n  }\n}\n\nexport default Metric;\n"]},"metadata":{},"sourceType":"module"}