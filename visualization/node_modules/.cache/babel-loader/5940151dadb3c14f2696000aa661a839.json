{"ast":null,"code":"var _jsxFileName = \"/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/LTA-chatbot/visualization/src/components/Piechart.js\";\nimport { PieChart, Pie, Cell, Sector } from \"recharts\";\nimport { Component } from \"react\";\nimport { url } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Piechart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pieData: [],\n      activeIndex: 0\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      let response = await fetch(`${url}/feedback`, {\n        method: \"GET\"\n      });\n      let data = await response.json(); // Obtaining number of \"Yes\" and \"No\"\n\n      let pieData = {};\n\n      for (let i = 0; i < data.length; i++) {\n        const bool = data[i].boolean;\n\n        if (!(bool in pieData)) {\n          pieData[bool] = 1;\n        } else {\n          pieData[bool] += 1;\n        }\n      } // To convert into the right data format for plotting\n\n\n      var pie = [];\n\n      for (var p in pieData) {\n        pie.push([p, pieData[p]]);\n      }\n\n      pie = pie.map(_ref => {\n        let [bool, count] = _ref;\n        return {\n          bool,\n          count\n        };\n      });\n      this.setState({\n        pieData: pie\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const {\n      pieData\n    } = this.state;\n    const COLORS = [\"#20ada2\", \"#fa7474\"]; // Selection of colors on piechart, can be changed\n\n    const renderActiveShape = props => {\n      const RADIAN = Math.PI / 180;\n      const {\n        cx,\n        cy,\n        midAngle,\n        innerRadius,\n        outerRadius,\n        startAngle,\n        endAngle,\n        fill,\n        payload,\n        percent,\n        value\n      } = props;\n      const sin = Math.sin(-RADIAN * midAngle);\n      const cos = Math.cos(-RADIAN * midAngle);\n      const sx = cx + (outerRadius + 10) * cos;\n      const sy = cy + (outerRadius + 10) * sin;\n      const mx = cx + (outerRadius + 30) * cos;\n      const my = cy + (outerRadius + 30) * sin;\n      const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n      const ey = my;\n      const textAnchor = cos >= 0 ? \"start\" : \"end\";\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          x: cx,\n          y: cy,\n          dy: 8,\n          textAnchor: \"middle\",\n          fill: fill,\n          fontSize: 20,\n          children: payload.bool\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Sector, {\n          cx: cx,\n          cy: cy,\n          innerRadius: innerRadius,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          fill: fill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Sector, {\n          cx: cx,\n          cy: cy,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          innerRadius: outerRadius + 6,\n          outerRadius: outerRadius + 10,\n          fill: fill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: `M${sx},${sy}L${mx},${my}L${ex},${ey}`,\n          stroke: fill,\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: ex,\n          cy: ey,\n          r: 2,\n          fill: fill,\n          stroke: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: ex + (cos >= 0 ? 1 : -1) * 12,\n          y: ey,\n          textAnchor: textAnchor,\n          fill: \"#333\",\n          children: `${value}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: ex + (cos >= 0 ? 1 : -1) * 12,\n          y: ey,\n          dy: 18,\n          textAnchor: textAnchor,\n          fill: \"#999\",\n          children: `(${(percent * 100).toFixed(2)}%)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this);\n    };\n\n    const onPieEnter = (_, index) => {\n      this.setState({\n        activeIndex: index\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-title\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"title-name\",\n          children: \"Questions Chatbot Answered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: pieData.length ? /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 650,\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            activeIndex: this.state.activeIndex,\n            activeShape: renderActiveShape,\n            data: pieData,\n            innerRadius: 65,\n            outerRadius: 100,\n            fill: \"#8884d8\",\n            dataKey: \"count\",\n            isAnimationActive: true,\n            animationDuration: 200,\n            onMouseEnter: onPieEnter,\n            children: pieData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 44\n          }, this), \" There is no data yet! \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Piechart;","map":{"version":3,"sources":["/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/LTA-chatbot/visualization/src/components/Piechart.js"],"names":["PieChart","Pie","Cell","Sector","Component","url","Piechart","constructor","props","state","pieData","activeIndex","componentDidMount","response","fetch","method","data","json","i","length","bool","boolean","pie","p","push","map","count","setState","err","console","log","render","COLORS","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","toFixed","onPieEnter","_","index","entry"],"mappings":"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","sourcesContent":["import { PieChart, Pie, Cell, Sector } from \"recharts\";\nimport { Component } from \"react\";\nimport { url } from \"../config\";\n\nclass Piechart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pieData: [],\n      activeIndex: 0,\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      let response = await fetch(`${url}/feedback`, {\n        method: \"GET\",\n      });\n\n      let data = await response.json();\n      // Obtaining number of \"Yes\" and \"No\"\n      let pieData = {};\n      for (let i = 0; i < data.length; i++) {\n        const bool = data[i].boolean;\n        if (!(bool in pieData)) {\n          pieData[bool] = 1;\n        } else {\n          pieData[bool] += 1;\n        }\n      }\n      // To convert into the right data format for plotting\n      var pie = [];\n      for (var p in pieData) {\n        pie.push([p, pieData[p]]);\n      }\n      pie = pie.map(([bool, count]) => ({ bool, count }));\n      this.setState({\n        pieData: pie,\n      });\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const { pieData } = this.state;\n    const COLORS = [\"#20ada2\", \"#fa7474\"]; // Selection of colors on piechart, can be changed\n\n    const renderActiveShape = (props) => {\n      const RADIAN = Math.PI / 180;\n      const {\n        cx,\n        cy,\n        midAngle,\n        innerRadius,\n        outerRadius,\n        startAngle,\n        endAngle,\n        fill,\n        payload,\n        percent,\n        value,\n      } = props;\n      const sin = Math.sin(-RADIAN * midAngle);\n      const cos = Math.cos(-RADIAN * midAngle);\n      const sx = cx + (outerRadius + 10) * cos;\n      const sy = cy + (outerRadius + 10) * sin;\n      const mx = cx + (outerRadius + 30) * cos;\n      const my = cy + (outerRadius + 30) * sin;\n      const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n      const ey = my;\n      const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n      return (\n        <g>\n          <text\n            x={cx}\n            y={cy}\n            dy={8}\n            textAnchor=\"middle\"\n            fill={fill}\n            fontSize={20}\n          >\n            {payload.bool}\n          </text>\n          <Sector\n            cx={cx}\n            cy={cy}\n            innerRadius={innerRadius}\n            outerRadius={outerRadius}\n            startAngle={startAngle}\n            endAngle={endAngle}\n            fill={fill}\n          />\n          <Sector\n            cx={cx}\n            cy={cy}\n            startAngle={startAngle}\n            endAngle={endAngle}\n            innerRadius={outerRadius + 6}\n            outerRadius={outerRadius + 10}\n            fill={fill}\n          />\n          <path\n            d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n            stroke={fill}\n            fill=\"none\"\n          />\n          <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n          <text\n            x={ex + (cos >= 0 ? 1 : -1) * 12}\n            y={ey}\n            textAnchor={textAnchor}\n            fill=\"#333\"\n          >{`${value}`}</text>\n          <text\n            x={ex + (cos >= 0 ? 1 : -1) * 12}\n            y={ey}\n            dy={18}\n            textAnchor={textAnchor}\n            fill=\"#999\"\n          >\n            {`(${(percent * 100).toFixed(2)}%)`}\n          </text>\n        </g>\n      );\n    };\n\n    const onPieEnter = (_, index) => {\n      this.setState({\n        activeIndex: index,\n      });\n    };\n\n    return (\n      <div>\n        <div className=\"chart-title\">\n          <strong className=\"title-name\">Questions Chatbot Answered</strong>\n        </div>\n        <>\n        {pieData.length ? (\n          <PieChart width={650} height={300}>\n          <Pie\n            activeIndex={this.state.activeIndex}\n            activeShape={renderActiveShape}\n            data={pieData}\n            innerRadius={65}\n            outerRadius={100}\n            fill=\"#8884d8\"\n            dataKey=\"count\"\n            isAnimationActive={true}\n            animationDuration={200}\n            onMouseEnter={onPieEnter}\n          >\n            {pieData.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n        ) : ( <div className=\"chart-title\"><br/> There is no data yet! </div> ) }\n        </>\n      </div>\n    );\n  }\n}\n\nexport default Piechart;\n"]},"metadata":{},"sourceType":"module"}