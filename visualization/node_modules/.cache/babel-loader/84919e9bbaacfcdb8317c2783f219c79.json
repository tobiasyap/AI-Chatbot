{"ast":null,"code":"var _jsxFileName = \"/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Piechart.js\";\nimport { PieChart, Pie, Cell, Sector, ResponsiveContainer } from \"recharts\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Piechart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pieData: [],\n      activeIndex: 0\n    };\n  }\n\n  async componentDidMount() {\n    await fetch;\n    let response = await fetch(\"http://localhost:8080/api/feedback\", {\n      method: \"GET\"\n    });\n    let data = await response.json();\n    let pieData = {};\n\n    for (let i = 0; i < data.length; i++) {\n      const bool = data[i].boolean;\n\n      if (!(bool in pieData)) {\n        pieData[bool] = 1;\n      } else {\n        pieData[bool] += 1;\n      }\n    }\n\n    var pie = [];\n\n    for (var p in pieData) {\n      pie.push([p, pieData[p]]);\n    }\n\n    pie = pie.map(_ref => {\n      let [bool, count] = _ref;\n      return {\n        bool,\n        count\n      };\n    });\n    this.setState({\n      pieData: pie\n    });\n  }\n\n  render() {\n    const {\n      pieData\n    } = this.state;\n    const COLORS = [\"#20ada2\", \"#fa7474\"]; // const COLORS = [\"#00C49F\", \"#FF8042\"];\n\n    const renderActiveShape = props => {\n      const RADIAN = Math.PI / 180;\n      const {\n        cx,\n        cy,\n        midAngle,\n        innerRadius,\n        outerRadius,\n        startAngle,\n        endAngle,\n        fill,\n        payload,\n        percent,\n        value\n      } = props;\n      const sin = Math.sin(-RADIAN * midAngle);\n      const cos = Math.cos(-RADIAN * midAngle);\n      const sx = cx + (outerRadius + 10) * cos;\n      const sy = cy + (outerRadius + 10) * sin;\n      const mx = cx + (outerRadius + 30) * cos;\n      const my = cy + (outerRadius + 30) * sin;\n      const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n      const ey = my;\n      const textAnchor = cos >= 0 ? \"start\" : \"end\";\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          x: cx,\n          y: cy,\n          dy: 8,\n          textAnchor: \"middle\",\n          fill: fill,\n          children: payload.bool\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Sector, {\n          cx: cx,\n          cy: cy,\n          innerRadius: innerRadius,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          fill: fill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Sector, {\n          cx: cx,\n          cy: cy,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          innerRadius: outerRadius + 6,\n          outerRadius: outerRadius + 10,\n          fill: fill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: `M${sx},${sy}L${mx},${my}L${ex},${ey}`,\n          stroke: fill,\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: ex,\n          cy: ey,\n          r: 2,\n          fill: fill,\n          stroke: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: ex + (cos >= 0 ? 1 : -1) * 12,\n          y: ey,\n          textAnchor: textAnchor,\n          fill: \"#333\",\n          children: `${value}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: ex + (cos >= 0 ? 1 : -1) * 12,\n          y: ey,\n          dy: 18,\n          textAnchor: textAnchor,\n          fill: \"#999\",\n          children: `(${(percent * 100).toFixed(2)}%)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this);\n    };\n\n    const onPieEnter = (_, index) => {\n      this.setState({\n        activeIndex: index\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Questions Chatbot Answered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 650,\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          activeIndex: this.state.activeIndex,\n          activeShape: renderActiveShape,\n          data: pieData,\n          innerRadius: 65,\n          outerRadius: 100,\n          fill: \"#8884d8\",\n          dataKey: \"count\",\n          isAnimationActive: true,\n          animationDuration: 200,\n          onMouseEnter: onPieEnter,\n          children: pieData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Piechart;","map":{"version":3,"sources":["/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Piechart.js"],"names":["PieChart","Pie","Cell","Sector","ResponsiveContainer","Component","Piechart","constructor","props","state","pieData","activeIndex","componentDidMount","fetch","response","method","data","json","i","length","bool","boolean","pie","p","push","map","count","setState","render","COLORS","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","toFixed","onPieEnter","_","index","entry"],"mappings":"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","sourcesContent":["import { PieChart, Pie, Cell, Sector, ResponsiveContainer } from \"recharts\";\nimport { Component } from \"react\";\n\nclass Piechart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pieData: [],\n      activeIndex: 0,\n    };\n  }\n\n  async componentDidMount() {\n    await fetch;\n    let response = await fetch(\"http://localhost:8080/api/feedback\", {\n      method: \"GET\",\n    });\n\n    let data = await response.json();\n    let pieData = {};\n    for (let i = 0; i < data.length; i++) {\n      const bool = data[i].boolean;\n      if (!(bool in pieData)) {\n        pieData[bool] = 1;\n      } else {\n        pieData[bool] += 1;\n      }\n    }\n    var pie = [];\n    for (var p in pieData) {\n      pie.push([p, pieData[p]]);\n    }\n    pie = pie.map(([bool, count]) => ({ bool, count }));\n    this.setState({\n      pieData: pie,\n    });\n  }\n\n  render() {\n    const { pieData } = this.state;\n    const COLORS = [\"#20ada2\", \"#fa7474\"];\n    // const COLORS = [\"#00C49F\", \"#FF8042\"];\n\n    const renderActiveShape = (props) => {\n      const RADIAN = Math.PI / 180;\n      const {\n        cx,\n        cy,\n        midAngle,\n        innerRadius,\n        outerRadius,\n        startAngle,\n        endAngle,\n        fill,\n        payload,\n        percent,\n        value,\n      } = props;\n      const sin = Math.sin(-RADIAN * midAngle);\n      const cos = Math.cos(-RADIAN * midAngle);\n      const sx = cx + (outerRadius + 10) * cos;\n      const sy = cy + (outerRadius + 10) * sin;\n      const mx = cx + (outerRadius + 30) * cos;\n      const my = cy + (outerRadius + 30) * sin;\n      const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n      const ey = my;\n      const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n      return (\n        <g>\n          <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n            {payload.bool}\n          </text>\n          <Sector\n            cx={cx}\n            cy={cy}\n            innerRadius={innerRadius}\n            outerRadius={outerRadius}\n            startAngle={startAngle}\n            endAngle={endAngle}\n            fill={fill}\n          />\n          <Sector\n            cx={cx}\n            cy={cy}\n            startAngle={startAngle}\n            endAngle={endAngle}\n            innerRadius={outerRadius + 6}\n            outerRadius={outerRadius + 10}\n            fill={fill}\n          />\n          <path\n            d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n            stroke={fill}\n            fill=\"none\"\n          />\n          <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n          <text\n            x={ex + (cos >= 0 ? 1 : -1) * 12}\n            y={ey}\n            textAnchor={textAnchor}\n            fill=\"#333\"\n          >{`${value}`}</text>\n          <text\n            x={ex + (cos >= 0 ? 1 : -1) * 12}\n            y={ey}\n            dy={18}\n            textAnchor={textAnchor}\n            fill=\"#999\"\n          >\n            {`(${(percent * 100).toFixed(2)}%)`}\n          </text>\n        </g>\n      );\n    };\n\n    const onPieEnter = (_, index) => {\n      this.setState({\n        activeIndex: index,\n      });\n    };\n\n    return (\n      <div>\n        <div className=\"chart-title\">\n          <h3>Questions Chatbot Answered</h3>\n        </div>\n        <PieChart width={650} height={300}>\n          <Pie\n            activeIndex={this.state.activeIndex}\n            activeShape={renderActiveShape}\n            data={pieData}\n            innerRadius={65}\n            outerRadius={100}\n            fill=\"#8884d8\"\n            dataKey=\"count\"\n            isAnimationActive={true}\n            animationDuration={200}\n            onMouseEnter={onPieEnter}\n          >\n            {pieData.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </div>\n    );\n  }\n}\n\nexport default Piechart;\n"]},"metadata":{},"sourceType":"module"}