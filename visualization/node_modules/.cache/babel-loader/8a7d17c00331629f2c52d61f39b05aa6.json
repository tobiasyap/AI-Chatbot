{"ast":null,"code":"var _jsxFileName = \"/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Metric.js\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Metric extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      time: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    let response = await fetch(\"http://localhost:8080/api/feedback\", {\n      method: \"GET\"\n    });\n    let data = await response.json();\n    let times = data.map(x => x.createdAt);\n    let latest = times[0];\n\n    for (let i = 0; i < times.length; i++) {\n      if (times[i] > latest) {\n        latest = times[i];\n      }\n    }\n\n    console.log(latest);\n    latest = latest.substring(0, 10) + \", \" + latest.substring(11, 19);\n    this.setState({\n      count: data.length,\n      time: latest // last updated\n\n    });\n  }\n\n  render() {\n    const {\n      count,\n      time\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Number of Queries Asked:\", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), \"Last Asked Query:\", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Metric;","map":{"version":3,"sources":["/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Metric.js"],"names":["Component","Metric","constructor","props","state","count","time","componentDidMount","response","fetch","method","data","json","times","map","x","createdAt","latest","i","length","console","log","substring","setState","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,EAAuC;AAC/DC,MAAAA,MAAM,EAAE;AADuD,KAAvC,CAA1B;AAIA,QAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAjB;AACA,QAAIC,KAAK,GAAGF,IAAI,CAACG,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACC,SAAlB,CAAZ;AACA,QAAIC,MAAM,GAAGJ,KAAK,CAAC,CAAD,CAAlB;;AACA,SAAK,IAAIK,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGL,KAAK,CAACM,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,UAAIL,KAAK,CAACK,CAAD,CAAL,GAAWD,MAAf,EAAuB;AACnBA,QAAAA,MAAM,GAAGJ,KAAK,CAACK,CAAD,CAAd;AACH;AACJ;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAA,IAAAA,MAAM,GAAGA,MAAM,CAACK,SAAP,CAAiB,CAAjB,EAAmB,EAAnB,IAAyB,IAAzB,GAAgCL,MAAM,CAACK,SAAP,CAAiB,EAAjB,EAAqB,EAArB,CAAzC;AACA,SAAKC,QAAL,CAAc;AACVlB,MAAAA,KAAK,EAAEM,IAAI,CAACQ,MADF;AAEVb,MAAAA,IAAI,EAAEW,MAFI,CAEG;;AAFH,KAAd;AAID;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkB,KAAKF,KAA7B;AAEA,wBACE;AAAA,8BACI;AAAA,4DAEA;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,oCAOM;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cAPN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA5C4B;;AA+C/B,eAAeL,MAAf","sourcesContent":["import { Component } from \"react\";\n\nclass Metric extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      time: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    let response = await fetch(\"http://localhost:8080/api/feedback\", {\n      method: \"GET\",\n    });\n\n    let data = await response.json();\n    let times = data.map((x) => x.createdAt)\n    let latest = times[0]\n    for (let i=0; i < times.length; i++) {\n        if (times[i] > latest) {\n            latest = times[i]\n        }\n    }\n    console.log(latest)\n    latest = latest.substring(0,10) + \", \" + latest.substring(11, 19)\n    this.setState({\n        count: data.length,\n        time: latest // last updated\n    })\n  };\n\n  render() {\n    const { count, time } = this.state;\n\n    return (\n      <div>\n          <h1>\n          Number of Queries Asked: \n          <h2>{count}</h2>\n          </h1>\n\n          Last Asked Query: \n            <h1>{time}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Metric;"]},"metadata":{},"sourceType":"module"}