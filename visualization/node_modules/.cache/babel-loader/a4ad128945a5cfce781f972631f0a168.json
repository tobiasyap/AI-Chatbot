{"ast":null,"code":"var _jsxFileName = \"/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Metric.js\";\nimport { Component } from \"react\"; // import * as moment from 'moment';\n\nimport * as moment from 'moment-timezone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Metric extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      time: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    let response = await fetch(\"http://localhost:8080/api/feedback\", {\n      method: \"GET\"\n    });\n    let data = await response.json();\n    let times = data.map(x => x.createdAt);\n    let latest = times[0];\n\n    for (let i = 0; i < times.length; i++) {\n      if (times[i] > latest) {\n        latest = times[i];\n      }\n    }\n\n    console.log(latest);\n    latest = new Date(latest); // var d = new Date(\"2020-04-13T00:00:00.000+08:00\");\n\n    latest = moment(latest);\n    console.log(latest);\n    latest = latest.tz('Asia/Singapore').format('ha'); // latest = latest.toLocaleString('en-US', { timeZone: 'America/New_York' })\n    // latest = latest.substring(0,10) + \", \" + latest.substring(11, 19)\n\n    console.log(latest);\n\n    const formatTime = createdAt => {\n      // moment(createdAt + ' +0800', 'HH:mm Z',)\n      const thisMoment = moment.tz(createdAt, 'HH:mm', 'Asia/Singapore'); // const thisMoment = moment.utc(createdAt ' +0800').format(\"h:mm\");\n\n      return thisMoment;\n    };\n\n    this.setState({\n      count: data.length,\n      // time: latest // last updated\n      time: formatTime(latest) // last updated\n\n    });\n    console.log(this.state.time);\n  }\n\n  render() {\n    const {\n      count,\n      time\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Number of Queries Asked:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Last Asked Query:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Metric;","map":{"version":3,"sources":["/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Metric.js"],"names":["Component","moment","Metric","constructor","props","state","count","time","componentDidMount","response","fetch","method","data","json","times","map","x","createdAt","latest","i","length","console","log","Date","tz","format","formatTime","thisMoment","setState","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B,C,CACA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC7BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,EAAuC;AAC/DC,MAAAA,MAAM,EAAE;AADuD,KAAvC,CAA1B;AAIA,QAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAjB;AACA,QAAIC,KAAK,GAAGF,IAAI,CAACG,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACC,SAAlB,CAAZ;AACA,QAAIC,MAAM,GAAGJ,KAAK,CAAC,CAAD,CAAlB;;AACA,SAAK,IAAIK,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGL,KAAK,CAACM,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,UAAIL,KAAK,CAACK,CAAD,CAAL,GAAWD,MAAf,EAAuB;AACnBA,QAAAA,MAAM,GAAGJ,KAAK,CAACK,CAAD,CAAd;AACH;AACJ;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAA,IAAAA,MAAM,GAAG,IAAIK,IAAJ,CAASL,MAAT,CAAT,CAdwB,CAexB;;AACAA,IAAAA,MAAM,GAAGjB,MAAM,CAACiB,MAAD,CAAf;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAA,IAAAA,MAAM,GAAGA,MAAM,CAACM,EAAP,CAAU,gBAAV,EAA4BC,MAA5B,CAAmC,IAAnC,CAAT,CAlBwB,CAmBxB;AACA;;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;;AAEA,UAAMQ,UAAU,GAAIT,SAAD,IAAe;AAC9B;AACA,YAAMU,UAAU,GAAG1B,MAAM,CAACuB,EAAP,CAAUP,SAAV,EAAqB,OAArB,EAA8B,gBAA9B,CAAnB,CAF8B,CAG9B;;AACA,aAAOU,UAAP;AACF,KALF;;AAOA,SAAKC,QAAL,CAAc;AACVtB,MAAAA,KAAK,EAAEM,IAAI,CAACQ,MADF;AAEV;AACAb,MAAAA,IAAI,EAAEmB,UAAU,CAACR,MAAD,CAHN,CAGe;;AAHf,KAAd;AAKAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,IAAvB;AACD;;AAEDsB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEvB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkB,KAAKF,KAA7B;AAEA,wBACA;AAAA,8BACE;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAIM;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBAJN;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOQ;AAAA;AAAA;AAAA;AAAA,cAPR,eAQQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARR,eAUa;AAAA,kBAASC;AAAT;AAAA;AAAA;AAAA;AAAA,cAVb;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAcD;;AAhE4B;;AAmE/B,eAAeL,MAAf","sourcesContent":["import { Component } from \"react\";\n// import * as moment from 'moment';\nimport * as moment from 'moment-timezone';\n\nclass Metric extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      time: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    let response = await fetch(\"http://localhost:8080/api/feedback\", {\n      method: \"GET\",\n    });\n\n    let data = await response.json();\n    let times = data.map((x) => x.createdAt)\n    let latest = times[0]\n    for (let i=0; i < times.length; i++) {\n        if (times[i] > latest) {\n            latest = times[i]\n        }\n    }\n    console.log(latest)\n    latest = new Date(latest);\n    // var d = new Date(\"2020-04-13T00:00:00.000+08:00\");\n    latest = moment(latest);\n    console.log(latest)\n    latest = latest.tz('Asia/Singapore').format('ha');\n    // latest = latest.toLocaleString('en-US', { timeZone: 'America/New_York' })\n    // latest = latest.substring(0,10) + \", \" + latest.substring(11, 19)\n    console.log(latest)\n\n    const formatTime = (createdAt) => {\n        // moment(createdAt + ' +0800', 'HH:mm Z',)\n        const thisMoment = moment.tz(createdAt, 'HH:mm', 'Asia/Singapore')\n        // const thisMoment = moment.utc(createdAt ' +0800').format(\"h:mm\");\n        return thisMoment;\n     };\n    \n    this.setState({\n        count: data.length,\n        // time: latest // last updated\n        time: formatTime(latest) // last updated\n    })\n    console.log(this.state.time);\n  };\n\n  render() {\n    const { count, time } = this.state;\n\n    return (\n    <div>\n      <div>\n          <h2>\n            Number of Queries Asked: \n          </h2>\n            <h3>{count}</h3>\n            </div>\n            <br/>\n            <h2>\n              Last Asked Query: \n            </h2><strong>{time}</strong>\n      </div>\n    );\n  }\n}\n\nexport default Metric;"]},"metadata":{},"sourceType":"module"}