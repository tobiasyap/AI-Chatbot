{"ast":null,"code":"var _jsxFileName = \"/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Wordcloud.js\";\nimport { Component } from 'react';\nimport ReactWordcloud from 'react-wordcloud';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Wordcloud extends Component {\n  constructor(props) {\n    super(props); // this.loadData = this.loadData.bind(this);\n\n    this.state = {\n      wordData: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      let response = await fetch(\"http://localhost:8080/api/feedback\", {\n        method: \"GET\"\n      });\n      let data = await response.json();\n      let wordFreq = [];\n      let allWords = {};\n\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].feedback) {\n          var words = data[i].feedback.split(\" \");\n\n          for (let j = 0; j < words.length; j++) {\n            let word = words[j].toLowerCase();\n\n            if (word.match(/[a-z]/i)) {\n              if (!(word in allWords)) {\n                allWords[word] = 1;\n              } else {\n                allWords[word] += 1;\n              }\n            }\n          }\n        }\n      }\n\n      for (var word in allWords) {\n        wordFreq.push([word, allWords[word]]);\n      }\n\n      wordFreq = wordFreq.sort((a, b) => b[1] - a[1]);\n      wordFreq = wordFreq.map(_ref => {\n        let [text, value] = _ref;\n        return {\n          text,\n          value\n        };\n      });\n      await this.setState({\n        wordData: wordFreq\n      });\n      console.log(this.state.wordData);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const {\n      wordData\n    } = this.state;\n    const sizes = [650, 300];\n    const options = {\n      fontFamily: \"Arial\",\n      fontSizes: [20, 50],\n      rotations: 2,\n      rotationAngles: [-90, 0]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Most Frequently Used Words in Feedbacks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactWordcloud, {\n        words: wordData,\n        size: sizes,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Wordcloud;","map":{"version":3,"sources":["/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Wordcloud.js"],"names":["Component","ReactWordcloud","Wordcloud","constructor","props","state","wordData","componentDidMount","response","fetch","method","data","json","wordFreq","allWords","i","length","feedback","words","split","j","word","toLowerCase","match","push","sort","a","b","map","text","value","setState","console","log","err","render","sizes","options","fontFamily","fontSizes","rotations","rotationAngles"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport ReactWordcloud from 'react-wordcloud';\n\nclass Wordcloud extends Component {\n    constructor(props) {\n      super(props);\n      // this.loadData = this.loadData.bind(this);\n      this.state = {\n        wordData: [],\n      };\n    }\n  \n    async componentDidMount() {\n      try {\n        let response = await fetch(\"http://localhost:8080/api/feedback\", {\n          method: \"GET\",\n        });\n  \n        let data = await response.json();\n        let wordFreq = [];\n        let allWords = {};\n        for (let i = 0; i < data.length; i++) {\n            if (data[i].feedback) {\n                var words = data[i].feedback.split(\" \");\n                for (let j = 0; j < words.length; j++) {\n                    let word = words[j].toLowerCase();\n                    if ((word.match(/[a-z]/i))) {\n                        if(!(word in allWords)) {\n                            allWords[word] = 1;\n                        } else {\n                            allWords[word] += 1;\n                        }\n                    }\n                }\n            }\n        }\n        for (var word in allWords) {\n          wordFreq.push([word, allWords[word]]);\n        }\n        wordFreq = wordFreq.sort((a, b) => b[1] - a[1]);\n        wordFreq = wordFreq.map(([text, value]) => ({ text, value }));\n        await this.setState({\n          wordData: wordFreq,\n        });\n        console.log(this.state.wordData);\n      } catch(err) {\n        console.log(err)\n      }\n    };\n  \n    render() {\n      const { wordData } = this.state;\n      const sizes = [650, 300];\n      const options = {\n          fontFamily: \"Arial\",\n          fontSizes: [20, 50],\n          rotations: 2,\n          rotationAngles: [-90,0]\n      };\n\n      return (\n          <div>\n          <div className=\"chart-title\">\n        <h3>Most Frequently Used Words in Feedbacks</h3>\n        </div>\n        <ReactWordcloud \n        words={wordData}\n        size={sizes}\n        options={options}\n        />\n        </div>\n      );\n    }\n  }\n  \n  export default Wordcloud;"]},"metadata":{},"sourceType":"module"}