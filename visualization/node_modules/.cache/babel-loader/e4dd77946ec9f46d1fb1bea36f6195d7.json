{"ast":null,"code":"var _jsxFileName = \"/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Barchart.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { BarChart } from 'reaviz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Barchart() {\n  _s();\n\n  const [barData, setBarData] = useState([]); // const uploadData = new FormData(data.target);\n  // const backendUrl = \"http://localhost:8080\"; // change to whatever\n  // axios.get(`${backendUrl}/api/feedback`)\n  //   .then((res) => {\n  //     setSubmitted(res);\n  //   })\n  //   .catch((error) => {\n  //     setError(error);\n  //     console.log(error)\n  //   });\n\n  function calculateOccurrence(data) {\n    let wordFrequencyData = [];\n    let allWords = {};\n\n    for (let i = 0; i < data.length; i++) {\n      words = data.user_query.split(\" \");\n\n      for (var w in words) {\n        if (!w in allWords) {\n          allWords[w] = 1;\n        } else {\n          allWords[w] += 1;\n        }\n      }\n    }\n\n    for (var word in allWords) {\n      wordFrequencyData.push([word, allWords[word]]);\n    }\n\n    wordFrequencyData = wordFrequencyData.sort((a, b) => a[1] - b[1]);\n    return wordFrequencyData;\n  }\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/feedback\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => {\n      setBarData(calculateOccurrence(data));\n      console.log(barData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BarChart // data={barData}\n    , {\n      data: [{\n        key: \"A\",\n        data: 1\n      }, {\n        key: \"B\",\n        data: 2\n      }],\n      height: 300,\n      width: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), \"Barchart here!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Barchart, \"95clpMumGM2pmqWtKGnx+m6/6Zo=\");\n\n_c = Barchart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"sources":["/Users/xuehui/Desktop/NUS_Stuff/AY2122.1_Y4S1/Capstone/lta-visualization/frontend/src/components/Barchart.js"],"names":["useState","useEffect","BarChart","Barchart","barData","setBarData","calculateOccurrence","data","wordFrequencyData","allWords","i","length","words","user_query","split","w","word","push","sort","a","b","fetch","method","then","res","json","console","log","key"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,QAAzB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC,CAD+B,CAG/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAASM,mBAAT,CAA6BC,IAA7B,EAAmC;AACjC,QAAIC,iBAAiB,GAAG,EAAxB;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGH,IAAI,CAACI,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClCE,MAAAA,KAAK,GAAGL,IAAI,CAACM,UAAL,CAAgBC,KAAhB,CAAsB,GAAtB,CAAR;;AACA,WAAK,IAAIC,CAAT,IAAcH,KAAd,EAAqB;AACnB,YAAI,CAACG,CAAD,IAAMN,QAAV,EAAoB;AAClBA,UAAAA,QAAQ,CAACM,CAAD,CAAR,GAAc,CAAd;AACD,SAFD,MAEO;AACLN,UAAAA,QAAQ,CAACM,CAAD,CAAR,IAAe,CAAf;AACD;AACF;AACF;;AACD,SAAK,IAAIC,IAAT,IAAiBP,QAAjB,EAA2B;AACzBD,MAAAA,iBAAiB,CAACS,IAAlB,CAAuB,CAACD,IAAD,EAAOP,QAAQ,CAACO,IAAD,CAAf,CAAvB;AACD;;AACDR,IAAAA,iBAAiB,GAAGA,iBAAiB,CAACU,IAAlB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAzC,CAApB;AAEA,WAAOZ,iBAAP;AACD;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AACxCC,MAAAA,MAAM,EAAE;AADgC,KAAvC,CAAL,CAGCC,IAHD,CAGMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHb,EAICF,IAJD,CAIMhB,IAAI,IAAI;AACZF,MAAAA,UAAU,CAACC,mBAAmB,CAACC,IAAD,CAApB,CAAV;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYvB,OAAZ;AACD,KAPD;AAQH,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAA,4BACE,QAAC,QAAD,CACA;AADA;AAEA,MAAA,IAAI,EAAE,CACJ;AAACwB,QAAAA,GAAG,EAAE,GAAN;AAAWrB,QAAAA,IAAI,EAAE;AAAjB,OADI,EAEJ;AAACqB,QAAAA,GAAG,EAAE,GAAN;AAAWrB,QAAAA,IAAI,EAAE;AAAjB,OAFI,CAFN;AAMA,MAAA,MAAM,EAAE,GANR;AAOA,MAAA,KAAK,EAAE;AAPP;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcH;;GA3DuBJ,Q;;KAAAA,Q","sourcesContent":["import { useState, useEffect } from 'react';\nimport { BarChart } from 'reaviz';\n\nexport default function Barchart() {\n    const [barData, setBarData] = useState([]);\n\n    // const uploadData = new FormData(data.target);\n    // const backendUrl = \"http://localhost:8080\"; // change to whatever\n    // axios.get(`${backendUrl}/api/feedback`)\n    //   .then((res) => {\n    //     setSubmitted(res);\n    //   })\n    //   .catch((error) => {\n    //     setError(error);\n    //     console.log(error)\n    //   });\n    function calculateOccurrence(data) {\n      let wordFrequencyData = [];\n      let allWords = {};\n      for (let i=0; i < data.length; i++) {\n        words = data.user_query.split(\" \")\n        for (var w in words) {\n          if (!w in allWords) {\n            allWords[w] = 1\n          } else {\n            allWords[w] += 1\n          }\n        }\n      }\n      for (var word in allWords) {\n        wordFrequencyData.push([word, allWords[word]])\n      }\n      wordFrequencyData = wordFrequencyData.sort((a, b) => a[1] - b[1])\n\n      return wordFrequencyData\n    } \n\n    useEffect(() => {\n        fetch(\"http://localhost:8080/api/feedback\", {\n            method: \"GET\"            \n        })\n        .then(res => res.json())\n        .then(data => {\n          setBarData(calculateOccurrence(data)); \n          console.log(barData) \n        })\n    }, [])\n\n    return (\n      <div>\n        <BarChart \n        // data={barData}\n        data={[\n          {key: \"A\", data: 1},\n          {key: \"B\", data: 2}\n        ]}\n        height={300}\n        width={300}\n        />\n        Barchart here! \n      </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}