{"version":3,"sources":["../src/components/AccordionSet.js"],"names":["AccordionSet","props","index","state","activeAccordion","setState","i","children","length","initiallyOpen","React","Children","map","child","cloneElement","isActive","shouldAccordionRender","onHeaderClick","toggleActiveAccordion","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAEMA,Y;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gCAAMA,KAAN;;AADiB,8EAYK,UAAAC,KAAK,EAAI;AAC/B,YAAIA,KAAK,KAAK,MAAKC,KAAL,CAAWC,eAAzB,EAA0C;AACxC,gBAAKC,QAAL,CAAc;AACZD,YAAAA,eAAe,EAAE,CAAC;AADN,WAAd;;AAGA;AACD;;AACD,cAAKC,QAAL,CAAc;AACZD,UAAAA,eAAe,EAAEF;AADL,SAAd;AAGD,OAtBkB;;AAAA,8EAwBK,UAAAA,KAAK,EAAI;AAC/B,eAAO,MAAKC,KAAL,CAAWC,eAAX,KAA+BF,KAAtC;AACD,OA1BkB;;AAEjB,YAAKC,KAAL,GAAa;AACXC,QAAAA,eAAe,EAAE,CAAC;AADP,OAAb;;AAGA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC9C,YAAIL,KAAK,CAACM,QAAN,CAAeD,CAAf,EAAkBL,KAAlB,CAAwBQ,aAA5B,EAA2C;AACzC,gBAAKN,KAAL,CAAWC,eAAX,GAA6BE,CAA7B;AACD;AACF;;AATgB;AAUlB;;;;aAkBD,kBAAS;AAAA;;AACP,4BACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACGI,eAAMC,QAAN,CAAeC,GAAf,CAAmB,KAAKX,KAAL,CAAWM,QAA9B,EAAwC,UAACM,KAAD,EAAQX,KAAR,EAAkB;AACzD,8BAAOQ,eAAMI,YAAN,CAAmBD,KAAnB,EAA0B;AAC/BE,YAAAA,QAAQ,EAAE,MAAI,CAACC,qBAAL,CAA2Bd,KAA3B,CADqB;AAE/Be,YAAAA,aAAa,EAAE,yBAAM;AACnB,cAAA,MAAI,CAACC,qBAAL,CAA2BhB,KAA3B;AACD;AAJ8B,WAA1B,CAAP;AAMD,SAPA,CADH,CADF;AAYD;;;;IA1CwBiB,gB;;iBA6CZnB,Y","sourcesContent":["import React, { Component } from \"react\";\n\nclass AccordionSet extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeAccordion: -1\n    };\n    for (let i = 0; i < props.children.length; i++) {\n      if (props.children[i].props.initiallyOpen) {\n        this.state.activeAccordion = i;\n      }\n    }\n  }\n\n  toggleActiveAccordion = index => {\n    if (index === this.state.activeAccordion) {\n      this.setState({\n        activeAccordion: -1\n      });\n      return;\n    }\n    this.setState({\n      activeAccordion: index\n    });\n  };\n\n  shouldAccordionRender = index => {\n    return this.state.activeAccordion === index;\n  };\n\n  render() {\n    return (\n      <div className=\"accordion-set\">\n        {React.Children.map(this.props.children, (child, index) => {\n          return React.cloneElement(child, {\n            isActive: this.shouldAccordionRender(index),\n            onHeaderClick: () => {\n              this.toggleActiveAccordion(index);\n            }\n          });\n        })}\n      </div>\n    );\n  }\n}\n\nexport default AccordionSet;\n"],"file":"AccordionSet.js"}