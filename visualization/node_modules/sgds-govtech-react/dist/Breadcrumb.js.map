{"version":3,"sources":["../src/components/Breadcrumb.js"],"names":["Breadcrumb","props","state","hovered","className","hasBackgroundDark","concat","getNavClassName","items","length","map","value","index","infoColor","color","hasTextWhite","link","text","React","Children","children","child","cloneElement","Component","BreadcrumbItem","onClick","href","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAGMA,U;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gCAAMA,KAAN;AACA,YAAKC,KAAL,GAAa;AACXC,QAAAA,OAAO,EAAE;AADE,OAAb;AAFiB;AAKlB;;;;aAED,2BAAkB;AAChB,YAAIC,SAAS,6BAAsB,KAAKH,KAAL,CAAWG,SAAX,IAAwB,EAA9C,CAAb;;AACA,YAAI,KAAKH,KAAL,CAAWI,iBAAf,EAAkC;AAChCD,UAAAA,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAiB,sBAAjB,CAAZ;AACD;;AACD,eAAOF,SAAP;AACD;;;aAED,kBAAS;AAAA;;AACP,4BACE;AAAK,UAAA,SAAS,EAAE,KAAKG,eAAL,EAAhB;AAAwC,wBAAW;AAAnD,wBACE,yCACG,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,GAA0B,CAA1B,GACG,KAAKR,KAAL,CAAWO,KAAX,CAAiBE,GAAjB,CAAqB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACrC,8BACE;AAAI,YAAA,GAAG,EAAEA;AAAT,0BACE;AACE,YAAA,KAAK,EACH,MAAI,CAACX,KAAL,CAAWY,SAAX,GACI;AAAEC,cAAAA,KAAK,EAAE,MAAI,CAACb,KAAL,CAAWY;AAApB,aADJ,GAEI,EAJR;AAME,YAAA,SAAS,EACP,MAAI,CAACZ,KAAL,CAAWc,YAAX,GAA0B,gBAA1B,GAA6C,IAPjD;AASE,YAAA,IAAI,EAAEJ,KAAK,CAACK;AATd,aAWGL,KAAK,CAACM,IAXT,CADF,CADF;AAiBD,SAlBD,CADH,GAoBGC,eAAMC,QAAN,CAAeT,GAAf,CAAmB,KAAKT,KAAL,CAAWmB,QAA9B,EAAwC,UAACC,KAAD,EAAQT,KAAR,EAAkB;AACxD,8BAAOM,eAAMI,YAAN,CAAmBD,KAAnB,EAA0B;AAC/BN,YAAAA,YAAY,EAAE,MAAI,CAACd,KAAL,CAAWc;AADM,WAA1B,CAAP;AAGD,SAJD,CArBN,CADF,CADF;AA+BD;;;;IAhDsBQ,gB;;AAmDlB,WAASC,cAAT,CAAwBvB,KAAxB,EAA+B;AACpC,wBACE,sDACE;AACE,MAAA,SAAS,EAAEA,KAAK,CAACc,YAAN,GAAqB,gBAArB,GAAwC,EADrD;AAEE,MAAA,OAAO,EAAEd,KAAK,CAACwB,OAFjB;AAGE,MAAA,IAAI,EAAExB,KAAK,CAACyB;AAHd,OAKGzB,KAAK,CAACmB,QALT,CADF,CADF;AAWD;;AAEDpB,EAAAA,UAAU,CAAC2B,YAAX,GAA0B;AACxBnB,IAAAA,KAAK,EAAE;AADiB,GAA1B;iBAIeR,U","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from \"react\";\n\nclass Breadcrumb extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hovered: false\n    };\n  }\n\n  getNavClassName() {\n    let className = `sgds-breadcrumb ${this.props.className || \"\"}`;\n    if (this.props.hasBackgroundDark) {\n      className = className.concat(\" has-background-dark\");\n    }\n    return className;\n  }\n\n  render() {\n    return (\n      <nav className={this.getNavClassName()} aria-label=\"breadcrumbs\">\n        <ul>\n          {this.props.items.length > 0\n            ? this.props.items.map((value, index) => {\n                return (\n                  <li key={index}>\n                    <a\n                      style={\n                        this.props.infoColor\n                          ? { color: this.props.infoColor }\n                          : {}\n                      }\n                      className={\n                        this.props.hasTextWhite ? \"has-text-white\" : null\n                      }\n                      href={value.link}\n                    >\n                      {value.text}\n                    </a>\n                  </li>\n                );\n              })\n            : React.Children.map(this.props.children, (child, index) => {\n                return React.cloneElement(child, {\n                  hasTextWhite: this.props.hasTextWhite\n                });\n              })}\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport function BreadcrumbItem(props) {\n  return (\n    <li>\n      <a\n        className={props.hasTextWhite ? \"has-text-white\" : \"\"}\n        onClick={props.onClick}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    </li>\n  );\n}\n\nBreadcrumb.defaultProps = {\n  items: []\n};\n\nexport default Breadcrumb;\n"],"file":"Breadcrumb.js"}