{"version":3,"sources":["../src/components/Button.js"],"names":["Button","props","disabled","onClick","state","hovered","focused","setState","size","buttonSize","colorType","className","isSecondary","isPrimary","concat","isOutlined","isRounded","isLoading","getSize","getColorType","paddingLeft","paddingHorizontal","paddingRight","paddingTop","paddingVertical","paddingBottom","borderColor","primaryColor","backgroundColor","color","style","rest","propTypes","getClassName","getStyle","isDisabled","children","Component","PropTypes","string","object","bool","number","func","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport getUnhandledProps from \"./lib/getUnhandledProps\";\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hovered: false,\n      focused: false\n    };\n  }\n\n  // Handle button hovered\n  mouseHoverOn() {\n    this.setState({\n      hovered: true\n    });\n  }\n\n  mouseHoverOff() {\n    this.setState({\n      hovered: false\n    });\n  }\n\n  getSize() {\n    let size = \"\";\n    if (this.props.buttonSize === \"small\") {\n      size = \" is-small\";\n    } else if (this.props.buttonSize === \"medium\") {\n      size = \" is-medium\";\n    } else if (this.props.buttonSize === \"large\") {\n      size = \" is-large\";\n    }\n    return size;\n  }\n\n  getColorType() {\n    if (this.props.colorType === \"success\") {\n      return \" is-success\";\n    }\n    if (this.props.colorType === \"warning\") {\n      return \" is-warning\";\n    }\n\n    if (this.props.colorType === \"danger\") {\n      return \" is-danger\";\n    }\n\n    if (this.props.colorType === \"info\") {\n      return \" is-info\";\n    }\n    return \"\";\n  }\n  // isPrimary, isOutlined, isRounded, disabled, buttonSize\n  getClassName() {\n    let className = this.props.isSecondary ? \"sgds-sec-button\" : \"sgds-button\";\n    if (this.props.isPrimary) {\n      className = className.concat(\" is-primary\");\n    }\n    if (this.props.isOutlined) {\n      className = className.concat(\" is-outlined\");\n    }\n    if (this.props.isRounded) {\n      className = className.concat(\" is-rounded\");\n    }\n    if (this.props.isLoading) {\n      className = className.concat(\" is-loading\");\n    }\n    className = className.concat(this.getSize());\n    className = className.concat(this.getColorType());\n\n    return className.concat(` ${this.props.className || \"\"}`);\n  }\n\n  getStyle() {\n    if (this.props.isOutlined) {\n      return {\n        paddingLeft: this.props.paddingHorizontal,\n        paddingRight: this.props.paddingHorizontal,\n        paddingTop: this.props.paddingVertical,\n        paddingBottom: this.props.paddingVertical,\n        borderColor: this.props.primaryColor,\n        backgroundColor:\n          this.state.hovered || this.state.focused\n            ? this.props.primaryColor\n            : \"transparent\",\n        color:\n          this.state.hovered || this.state.focused\n            ? \"#fff\"\n            : this.props.primaryColor,\n        ...this.props.style\n      };\n    } else {\n      return {\n        paddingLeft: this.props.paddingHorizontal,\n        paddingRight: this.props.paddingHorizontal,\n        paddingTop: this.props.paddingVertical,\n        paddingBottom: this.props.paddingVertical,\n        backgroundColor: this.props.primaryColor,\n        ...this.props.style\n      };\n    }\n  }\n\n  onClick = () => {\n    if (!this.props.disabled) {\n      this.props.onClick();\n    }\n  };\n\n  render() {\n    const rest = getUnhandledProps(Button.propTypes, this.props);\n\n    return (\n      <button\n        className={this.getClassName()}\n        style={this.getStyle()}\n        disabled={this.props.isDisabled}\n        onMouseEnter={() =>\n          this.setState({\n            hovered: true\n          })\n        }\n        onMouseLeave={() =>\n          this.setState({\n            hovered: false\n          })\n        }\n        onClick={this.onClick}\n        onFocus={() => this.setState({ focused: true })}\n        onBlur={() => this.setState({ focused: false })}\n        {...rest}\n      >\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  isPrimary: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isSecondary: PropTypes.bool,\n  isOutlined: PropTypes.bool,\n  isRounded: PropTypes.bool,\n  buttonSize: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  paddingHorizontal: PropTypes.number,\n  paddingVertical: PropTypes.number,\n  primaryColor: PropTypes.string,\n  onClick: PropTypes.func,\n  colorType: PropTypes.string\n};\n\nButton.defaultProps = {\n  onClick() {}\n};\n\nexport default Button;\n"],"file":"Button.js"}