{"version":3,"sources":["../src/components/Notification.js"],"names":["Notification","props","getSelfClassName","className","getClassName","isToast","colour","getIcon","icon","title","content","closable","onClose","propTypes","PropTypes","oneOfType","bool","string","func","style","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAGA,WAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAC7B,iCAAOD,KAAK,CAACE,SAAb,+DAA0B,KAA1B;AACD,KAFD;;AAIA,QAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,UAAID,SAAS,GAAG,EAAhB;;AACA,UAAIF,KAAK,CAACI,OAAV,EAAmB;AACjBF,QAAAA,SAAS,GAAG,4BAAZ;AACD,OAFD,MAEO;AACLA,QAAAA,SAAS,GAAG,mBAAZ;AACD;;AACD,UAAIF,KAAK,CAACK,MAAV,EAAkB;AAChBH,QAAAA,SAAS,aAAMA,SAAN,iBAAsBF,KAAK,CAACK,MAA5B,CAAT;AACD;;AACD,UAAIJ,gBAAgB,EAApB,EAAwB;AACtB,yBAAUC,SAAV,cAAuBD,gBAAgB,EAAvC;AACD,OAFD,MAEO;AACL,eAAOC,SAAP;AACD;AACF,KAfD;;AAiBA,QAAMI,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,iCAAoBN,KAAK,CAACO,IAA1B;AACD,KAFD;;AAIA,wBACE;AAAK,MAAA,SAAS,EAAEJ,YAAY;AAA5B,oBACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACGH,KAAK,CAACO,IAAN,gBAAa;AAAM,MAAA,SAAS,EAAED,OAAO;AAAxB,MAAb,GAAmD,IADtD,eAEE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE;AAAG,MAAA,SAAS,EAAC;AAAb,OAAqCN,KAAK,CAACQ,KAA3C,CADF,eAEE,wCAAIR,KAAK,CAACS,OAAV,CAFF,CAFF,EAMGT,KAAK,CAACU,QAAN,gBACC;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,OAAO,EAAE,mBAAM;AACbV,QAAAA,KAAK,CAACW,OAAN;AACD;AAJH,MADD,GAOG,IAbN,CADF,CADF;AAmBD;;AAEDZ,EAAAA,YAAY,CAACa,SAAb,GAAyB;AACvBR,IAAAA,OAAO,EAAES,mBAAUC,SAAV,CAAoB,CAACD,mBAAUE,IAAX,EAAiBF,mBAAUG,MAA3B,CAApB,CADc;AAEvBR,IAAAA,KAAK,EAAEK,mBAAUG,MAFM;AAGvBP,IAAAA,OAAO,EAAEI,mBAAUG,MAHI;AAIvBT,IAAAA,IAAI,EAAEM,mBAAUG,MAJO;AAKvBN,IAAAA,QAAQ,EAAEG,mBAAUE,IALG;AAMvBJ,IAAAA,OAAO,EAAEE,mBAAUI,IANI;AAOvBZ,IAAAA,MAAM,EAAEQ,mBAAUG,MAPK;AAQvBE,IAAAA,KAAK,EAAEL,mBAAUM,MARM;AASvBjB,IAAAA,SAAS,EAAEW,mBAAUG;AATE,GAAzB;iBAYejB,Y","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Notification(props) {\n  const getSelfClassName = () => {\n    return props.className ?? false;\n  };\n\n  const getClassName = () => {\n    let className = \"\";\n    if (props.isToast) {\n      className = \"sgds-notification is-toast\";\n    } else {\n      className = \"sgds-notification\";\n    }\n    if (props.colour) {\n      className = `${className} is-${props.colour}`;\n    }\n    if (getSelfClassName()) {\n      return `${className} ${getSelfClassName()}`;\n    } else {\n      return className;\n    }\n  };\n\n  const getIcon = () => {\n    return `sgds-icon ${props.icon} is-size-4`;\n  };\n\n  return (\n    <div className={getClassName()}>\n      <div className=\"sgds-notification-detail\">\n        {props.icon ? <span className={getIcon()}></span> : null}\n        <div className=\"sgds-notification-content\">\n          <p className=\"has-text-weight-bold\">{props.title}</p>\n          <p>{props.content}</p>\n        </div>\n        {props.closable ? (\n          <span\n            className=\"delete\"\n            onClick={() => {\n              props.onClose();\n            }}\n          ></span>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  isToast: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  title: PropTypes.string,\n  content: PropTypes.string,\n  icon: PropTypes.string,\n  closable: PropTypes.bool,\n  onClose: PropTypes.func,\n  colour: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default Notification;\n"],"file":"Notification.js"}