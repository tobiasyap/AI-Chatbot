function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react);
    global.SideNav = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _react) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SideNavItem = SideNavItem;
  _exports.SideNavMenuItem = SideNavMenuItem;
  _exports.SideNavMenu = SideNavMenu;
  _exports.default = void 0;
  _react = _interopRequireWildcard(_react);

  function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  // TODO: Take in a onClick handler on the links instead.
  // For accessibility, change a to Button
  var SideNav = /*#__PURE__*/function (_Component) {
    _inherits(SideNav, _Component);

    var _super = _createSuper(SideNav);

    function SideNav(props) {
      var _this;

      _classCallCheck(this, SideNav);

      _this = _super.call(this, props);

      _defineProperty(_assertThisInitialized(_this), "mainLinkOnClickHandler", function (id, isActive) {
        if (_this.menuItems[id].onClick) {
          _this.menuItems[id].onClick(id, isActive);
        }

        _this.setState(_defineProperty({}, "dropdown-".concat(id), isActive));
      });

      _defineProperty(_assertThisInitialized(_this), "renderSubMenuItems", function (subMenuItems) {
        var renderedSubMenuItems = subMenuItems.map(function (subItem, idx) {
          try {
            var linkChild = subItem.children ? subItem.children : /*#__PURE__*/_react.default.createElement("a", {
              className: "second-level-nav-item",
              href: subItem.link
            }, subItem.title);
            return /*#__PURE__*/_react.default.createElement("li", {
              key: "subItem-".concat(idx)
            }, linkChild);
          } catch (err) {
            console.error("Sub Menu Items could not be rendered :" + err.message);
            return /*#__PURE__*/_react.default.createElement("div", null);
          }
        });
        return renderedSubMenuItems;
      });

      _defineProperty(_assertThisInitialized(_this), "renderMenuItems", function () {
        var renderedItems = [];

        _this.menuItems.forEach(function (item, idx) {
          if (item.subMenuItems) {
            renderedItems.push( /*#__PURE__*/_react.default.createElement("li", {
              key: "mainList-".concat(idx),
              className: "second-level-nav"
            }, /*#__PURE__*/_react.default.createElement(DropDownLink, {
              isActive: _this.state["dropdown-".concat(idx)],
              onClick: _this.mainLinkOnClickHandler,
              key: "dropdown-".concat(idx),
              position: idx
            }, item.title)));
            var hiddenClass = _this.state["dropdown-".concat(idx)] ? "" : "is-hidden";
            renderedItems.push( /*#__PURE__*/_react.default.createElement("div", {
              key: "subMenuList-".concat(idx),
              className: "second-level-nav-div ".concat(hiddenClass)
            }, _this.renderSubMenuItems(item.subMenuItems)));
          } else {
            var listContent = item.children ? item.children : /*#__PURE__*/_react.default.createElement("a", {
              href: item.link
            }, item.title);
            renderedItems.push( /*#__PURE__*/_react.default.createElement("li", {
              key: "mainList-".concat(idx)
            }, listContent));
          }
        });

        return renderedItems;
      });

      var defaultStates = {};
      _this.isNotMissingState = true;

      if (props.menuItems) {
        _this.menuItems = props.menuItems;

        _this.menuItems.forEach(function (item, idx) {
          if (typeof item.isActive === "boolean") {
            defaultStates["dropdown-".concat(idx)] = item.isActive;
          } else {
            defaultStates["dropdown-".concat(idx)] = false;
          }
        });
      }

      var dropDownStates = defaultStates;
      _this.state = dropDownStates;
      return _this;
    } // Need to write tests to ensure that this works properly


    _createClass(SideNav, [{
      key: "render",
      value: function render() {
        if (this.props.menuItems && this.props.menuItems.length > 0) {
          return /*#__PURE__*/_react.default.createElement("aside", {
            className: "sgds-menu"
          }, /*#__PURE__*/_react.default.createElement("ul", {
            className: "sgds-menu-list"
          }, this.renderMenuItems()));
        }

        return /*#__PURE__*/_react.default.createElement("aside", {
          className: "sgds-menu"
        }, /*#__PURE__*/_react.default.createElement("ul", {
          className: "sgds-menu-list"
        }, this.props.children));
      }
    }]);

    return SideNav;
  }(_react.Component); //  TODO : Add accessibility to the framework.


  function DropDownLink(props) {
    var dropDownClickHandler = function dropDownClickHandler() {
      props.onClick(props.position, !props.isActive);
    };

    var computedLinkClass = "second-level-nav-header ";
    var computedIconClass = "sgds-icon ";

    if (props.isActive) {
      computedLinkClass += "is-active";
      computedIconClass += "sgds-icon-chevron-up";
    } else {
      computedIconClass += "sgds-icon-chevron-down";
    }

    return /*#__PURE__*/_react.default.createElement("a", {
      className: computedLinkClass,
      onClick: dropDownClickHandler
    }, props.children, /*#__PURE__*/_react.default.createElement("i", {
      className: computedIconClass,
      "aria-hidden": "true"
    }));
  }

  function SideNavItem(props) {
    if (props.component) {
      var componentProps = _objectSpread({}, props);

      delete componentProps.component;
      return /*#__PURE__*/_react.default.createElement("li", null, /*#__PURE__*/_react.default.createElement(props.component, componentProps));
    }

    return /*#__PURE__*/_react.default.createElement("li", null, /*#__PURE__*/_react.default.createElement("a", {
      href: props.href || "",
      onClick: props.onClick || function () {},
      className: "".concat(props.className, " ").concat(props.isActive ? "is-active" : "")
    }, props.children));
  }

  function SideNavMenuItem(props) {
    return /*#__PURE__*/_react.default.createElement(SideNavItem, _extends({}, props, {
      className: "second-level-nav-item ".concat(props.className || "")
    }));
  }

  function SideNavMenu(props) {
    var initiallyOpen = !!props.initiallyOpen;

    var _useState = (0, _react.useState)(initiallyOpen),
        _useState2 = _slicedToArray(_useState, 2),
        open = _useState2[0],
        setOpen = _useState2[1];

    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("li", {
      className: "second-level-nav"
    }, /*#__PURE__*/_react.default.createElement("a", {
      href: "#!",
      className: "second-level-nav-header ".concat(props.isActive ? "is-active" : ""),
      onClick: function onClick(e) {
        e.preventDefault();
        setOpen(!open);
      }
    }, props.text, /*#__PURE__*/_react.default.createElement("i", {
      className: "sgds-icon sgds-icon-chevron-".concat(open ? "up" : "down", " "),
      "aria-hidden": open ? "false" : "true"
    }))), open ? /*#__PURE__*/_react.default.createElement("div", null, props.children) : null);
  }

  var _default = SideNav;
  _exports.default = _default;
});
//# sourceMappingURL=SideNav.js.map