function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react);
    global.Tab = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _react) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _react = _interopRequireWildcard(_react);

  function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var Tab = /*#__PURE__*/function (_Component) {
    _inherits(Tab, _Component);

    var _super = _createSuper(Tab);

    function Tab(props) {
      var _this;

      _classCallCheck(this, Tab);

      _this = _super.call(this, props);
      _this.classes = props.className;
      _this.tabItems = props.tabItems;
      _this.state = {
        selectedTab: "tab0"
      };
      return _this;
    }

    _createClass(Tab, [{
      key: "handleTabClick",
      value: function handleTabClick(id) {
        this.setState({
          selectedTab: id
        });
      }
    }, {
      key: "renderTabs",
      value: function renderTabs() {
        var _this2 = this;

        var tabs = this.tabItems.map(function (item, idx) {
          var isSelected = _this2.state.selectedTab === "tab".concat(idx);
          var icon = [];

          if (item.icon) {
            icon = /*#__PURE__*/_react.default.createElement("i", {
              className: "sgds-icon padding--right--sm ".concat(item.icon)
            });
          }

          return /*#__PURE__*/_react.default.createElement("li", {
            key: "tab".concat(idx),
            id: "tab".concat(idx),
            className: isSelected ? "is-active" : ""
          }, /*#__PURE__*/_react.default.createElement("a", {
            role: "tab",
            "aria-selected": isSelected,
            "aria-controls": "tab".concat(idx),
            onClick: function onClick() {
              _this2.handleTabClick("tab".concat(idx));
            }
          }, icon, item.title));
        });
        return tabs;
      }
    }, {
      key: "renderTabContent",
      value: function renderTabContent() {
        var _this3 = this;

        var content = this.tabItems.map(function (item, idx) {
          var isSelected = _this3.state.selectedTab === "tab".concat(idx);

          if (isSelected) {
            return /*#__PURE__*/_react.default.createElement("div", {
              key: idx,
              className: "row",
              id: "tab".concat(idx),
              role: "tabpanel",
              "aria-labelledby": "tab".concat(idx)
            }, /*#__PURE__*/_react.default.createElement("div", {
              className: "col"
            }, /*#__PURE__*/_react.default.createElement("div", {
              className: "row"
            }, item.content)));
          }

          return "";
        });
        return content;
      }
    }, {
      key: "render",
      value: function render() {
        return /*#__PURE__*/_react.default.createElement("div", {
          className: this.classes
        }, /*#__PURE__*/_react.default.createElement("div", {
          className: "sgds-tabs"
        }, /*#__PURE__*/_react.default.createElement("ul", {
          className: "no-margin",
          role: "tablist"
        }, this.renderTabs())), this.renderTabContent());
      }
    }]);

    return Tab;
  }(_react.Component);

  var _default = Tab;
  _exports.default = _default;
});
//# sourceMappingURL=Tab.js.map