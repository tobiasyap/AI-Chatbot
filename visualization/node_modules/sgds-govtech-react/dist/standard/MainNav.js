function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react", "prop-types"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"), require("prop-types"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.propTypes);
    global.MainNav = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _react, _propTypes) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.MainNav = MainNav;
  _exports.MainNavBrand = MainNavBrand;
  _exports.MainNavItem = MainNavItem;
  _exports.MainNavBurger = MainNavBurger;
  _exports.MainNavMenu = MainNavMenu;
  _exports.MainNavMenuStart = MainNavMenuStart;
  _exports.MainNavMenuEnd = MainNavMenuEnd;
  _exports.MainNavDropdown = MainNavDropdown;
  _react = _interopRequireWildcard(_react);
  _propTypes = _interopRequireDefault(_propTypes);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

  function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

  function MainNav(_ref) {
    var children = _ref.children,
        isFluid = _ref.isFluid;
    return /*#__PURE__*/_react.default.createElement("nav", {
      className: "sgds-navbar",
      role: "navigation"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "sgds-container ".concat(isFluid ? "is-fluid" : "")
    }, children));
  }

  function MainNavBrand(props) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "sgds-navbar-brand"
    }, props.children);
  }

  function MainNavItem(_ref2) {
    var as = _ref2.as,
        _ref2$href = _ref2.href,
        href = _ref2$href === void 0 ? "" : _ref2$href,
        props = _objectWithoutProperties(_ref2, ["as", "href"]);

    var navItemClass = "sgds-navbar-item ".concat(props.isUpperCase ? "is-uppercase" : "", " ").concat(props.isTab ? "is-tab" : "", " ").concat(props.isActive ? "is-active" : "");

    if (as) {
      var MorphedComponent = as;
      return /*#__PURE__*/_react.default.createElement(MorphedComponent, _extends({
        className: navItemClass
      }, props), props.children);
    }

    var mainNavItemProps = {
      className: navItemClass,
      href: href,
      onClick: props.onClick
    };
    return href ? /*#__PURE__*/_react.default.createElement("a", mainNavItemProps, props.children) : /*#__PURE__*/_react.default.createElement("div", mainNavItemProps, props.children);
  }

  MainNavItem.propTypes = {
    as: _propTypes.default.elementType,
    href: _propTypes.default.string,
    isUpperCase: _propTypes.default.bool,
    isTab: _propTypes.default.bool,
    onClick: _propTypes.default.func,
    isActive: _propTypes.default.bool
  };

  function MainNavBurger(_ref3) {
    var onClick = _ref3.onClick,
        _ref3$expand = _ref3.expand,
        expand = _ref3$expand === void 0 ? "" : _ref3$expand;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "sgds-navbar-burger ".concat(expand ? "is-active" : ""),
      onClick: onClick
    }, /*#__PURE__*/_react.default.createElement("span", null), /*#__PURE__*/_react.default.createElement("span", null), /*#__PURE__*/_react.default.createElement("span", null));
  }

  MainNavBurger.propTypes = {
    onClick: _propTypes.default.func,
    expand: _propTypes.default.bool
  };

  function MainNavMenu(_ref4) {
    var children = _ref4.children,
        _ref4$expand = _ref4.expand,
        expand = _ref4$expand === void 0 ? "" : _ref4$expand;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "sgds-navbar-menu ".concat(expand ? "is-active" : "")
    }, children);
  }

  MainNavMenuEnd.propTypes = {
    expand: _propTypes.default.bool
  };

  function MainNavMenuStart(_ref5) {
    var children = _ref5.children;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "sgds-navbar-start"
    }, children);
  }

  function MainNavMenuEnd(_ref6) {
    var children = _ref6.children;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "sgds-navbar-end"
    }, children);
  }

  function MainNavDropdown(_ref7) {
    var children = _ref7.children,
        label = _ref7.label,
        _ref7$href = _ref7.href,
        href = _ref7$href === void 0 ? "" : _ref7$href,
        _ref7$onClick = _ref7.onClick,
        onClick = _ref7$onClick === void 0 ? function () {} : _ref7$onClick,
        props = _objectWithoutProperties(_ref7, ["children", "label", "href", "onClick"]);

    var _useState = (0, _react.useState)(true),
        _useState2 = _slicedToArray(_useState, 2),
        showChildren = _useState2[0],
        setShowChildren = _useState2[1];

    var onDropdownClick = function onDropdownClick(e) {
      e.preventDefault();
      setShowChildren(!showChildren);
      onClick();
    };

    return /*#__PURE__*/_react.default.createElement("div", {
      className: "sgds-navbar-item has-dropdown is-hoverable ".concat(props.isMega ? "is-mega" : "")
    }, /*#__PURE__*/_react.default.createElement("a", {
      className: "sgds-navbar-link ".concat(props.isUpperCase ? "is-uppercase" : "", " ").concat(props.isActive ? "is-active" : ""),
      href: href,
      onClick: onDropdownClick
    }, label), /*#__PURE__*/_react.default.createElement("div", {
      className: "sgds-navbar-dropdown ".concat(!showChildren ? "is-hidden-touch" : "")
    }, children));
  }

  MainNavDropdown.propTypes = {
    label: _propTypes.default.string,
    href: _propTypes.default.string,
    onClick: _propTypes.default.func,
    isActive: _propTypes.default.bool,
    isUpperCase: _propTypes.default.bool,
    isMega: _propTypes.default.bool
  };
});
//# sourceMappingURL=MainNav.js.map